on:
  push:
    branches:
      - '*'
      - '**/*'

name: Precompile any assets that have changed and push them to S3

concurrency:
  group: ${{ github.ref }}-asset-compilation
  cancel-in-progress: true

jobs:
  compile:
    name: Compile

    runs-on: ubuntu-20.04
    container: ruby:2.7.5-alpine3.13

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Set up dependencies
      env:
        DATABASE_APP_DB_TEST: boston_hmis_test
        WAREHOUSE_DATABASE_DB_TEST: warehouse_test
        HEALTH_DATABASE_DB_TEST: health_test
        DATABASE_DB_TEST: boston_cas_test
        REPORTING_DATABASE_DB_TEST: test_boston_reporting
      run: |
        apk add --no-cache \
          nodejs yarn npm \
          tzdata \
          git \
          bash \
          freetds-dev \
          icu icu-dev \
          curl libcurl curl-dev \
          imagemagick \
          libmagic file-dev file \
          build-base libxml2-dev libxslt-dev postgresql-dev \
          wkhtmltopdf libgcc libstdc++ libx11 glib libxrender libxext libintl ttf-dejavu ttf-droid ttf-freefont ttf-liberation ttf-ubuntu-font-family \
          chromium nss freetype freetype-dev harfbuzz ca-certificates ttf-freefont \
          lftp postgresql tmux postgis geos geos-dev \
          shared-mime-info

        echo "postgres:5432:*:postgres:postgres" > ~/.pgpass
        chmod 600 ~/.pgpass

        npm install
        gem install bundler --version=2.2.30

    - name: Install gems
      run: |
        bundle config set --local without 'production staging development'
        bundle install --jobs 4 --retry 3

    - name: 'App setup'
      run: |
        # cp config/secrets.yml.sample config/secrets.yml
        # mkdir app/assets/stylesheets/theme/styles
        # touch app/assets/stylesheets/theme/styles/_variables.scss
        cp config/database.yml.ci config/database.yml
        # pull down secrest from secrest msnager

    - name: Generate checksum and compile
      env:
        CLIENT: test
        DATABASE_ADAPTER: postgresql
        DATABASE_APP_DB_TEST: boston_hmis_test
        DATABASE_DB_TEST: boston_cas_test
        DATABASE_APP_DB: boston_db
        DATABASE_HOST: postgres
        DATABASE_PASS: postgres
        DATABASE_USER: postgres
        DATABASE_WAREHOUSE_DB_TEST: test_hmis_warehouse
        DEFAULT_FROM: greenriver.testing@mailinator.com
        ENCRYPTION_KEY: strongEncryptionstrongEncryptionstrongEncryption
        FQDN: openpath.host
        HEALTH_DATABASE_ADAPTER: postgresql
        HEALTH_DATABASE_DB_TEST: health_test
        HEALTH_DATABASE_HOST: postgres
        HEALTH_DATABASE_PASS: postgres
        HEALTH_DATABASE_USER: postgres
        HEALTH_FROM: greenriver.testing@mailinator.com
        HOSTNAME: openpath.host
        PORT: 80
        RAILS_ENV: test
        REPORTING_DATABASE_ADAPTER: postgresql
        REPORTING_DATABASE_DB_TEST: test_boston_reporting
        REPORTING_DATABASE_HOST: postgres
        REPORTING_DATABASE_PASS: postgres
        REPORTING_DATABASE_USER: postgres
        WAREHOUSE_DATABASE_ADAPTER: postgis
        WAREHOUSE_DATABASE_DB_TEST: warehouse_test
        WAREHOUSE_DATABASE_HOST: postgres
        WAREHOUSE_DATABASE_PASS: postgres
        WAREHOUSE_DATABASE_USER: postgres
        WAREHOUSE_DATABASE_DB: warehouse_db
        HEALTH_DATABASE_DB: health_db
        REPORTING_DATABASE_DB: reporting_db
      run: |
        bundle exec bin/compile_assets.rb qa
