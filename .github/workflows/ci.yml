name: Audit and Test

on:
  push:
    branches:
      - '*'
      - '**/*'
  # NOTE: you don't need to build all PRs if you are also building all branches
  # pull_request:
  #   branches:
  #     - '*'
  #     - '**/*'
jobs:
 # Label of the container job
 test-job:
   # Containers must run in Linux based operating systems
   runs-on: ubuntu-18.04

   # Docker Hub image that the job executes in
   container: ruby:2.6.3-slim-buster

   # Service containers to run with job
   services:
     postgres:
       image: postgres:11-alpine
       env:
         POSTGRES_PASSWORD: postgres
       # Set health checks to wait until postgres has started
       options: >-
         --health-cmd pg_isready
         --health-interval 10s
         --health-timeout 5s
         --health-retries 5
       ports:
         - 5432:5432

     redis:
       image: redis:alpine
       ports:
         - 6379:6379

   steps:
     - name: Set up dependancies
       env:
         DATABASE_APP_DB_TEST: boston_hmis_test
         WAREHOUSE_DATABASE_DB_TEST: warehouse_test
         HEALTH_DATABASE_DB_TEST: health_test
         DATABASE_DB_TEST: boston_cas_test
         REPORTING_DATABASE_DB_TEST: test_boston_reporting
       run: |
         apt-get update

         apt-get install -y \
           build-essential \
           curl \
           git \
           freetds-bin \
           freetds-dev \
           icu-devtools \
           libicu-dev \
           libc6-dev \
           libcurl4-openssl-dev \
           libmagic-dev \
           libpq-dev \
           postgresql-client \
           python \
           unzip

         echo "postgres:5432:*:postgres:postgres" > ~/.pgpass
         chmod 600 ~/.pgpass

         gem install bundler --version=1.17.3

     - uses: chrislennon/action-aws-cli@v1.1

     - uses: actions/checkout@v2

     - name: Use Node.js 10
       uses: actions/setup-node@v1
       with:
         node-version: 10.x

     - run: npm install

     - name: Install gems
       run: |
         bundle install --jobs 4 --retry 3 --without production staging development

     #- name: Run rubocop
     #  run: |
     #    bundle exec rubocop

     - name: Run bundle-audit
       run: |
         bundle exec bundle-audit check --update --ignore CVE-2019-16676 CVE-2017-1002201

     - name: Run brakeman
       run: |
         bundle exec brakeman -q --ensure-latest --no-pager --except PermitAttributes,Render

     - name: 'App setup'
       run: |
         cp config/secrets.yml.sample config/secrets.yml
         mkdir app/assets/stylesheets/theme/styles
         touch app/assets/stylesheets/theme/styles/_variables.scss
         cp .rspec.travis .rspec

     - name: Prepare test db
       env:
         CLIENT: test
         DATABASE_ADAPTER: postgresql
         DATABASE_APP_DB_TEST: boston_hmis_test
         DATABASE_DB_TEST: boston_cas_test
         DATABASE_HOST: postgres
         HEALTH_DATABASE_HOST: postgres
         REPORTING_DATABASE_HOST: postgres
         WAREHOUSE_DATABASE_HOST: postgres
         DATABASE_PASS: postgres
         HEALTH_DATABASE_PASS: postgres
         REPORTING_DATABASE_PASS: postgres
         WAREHOUSE_DATABASE_PASS: postgres
         DATABASE_USER: postgres
         HEALTH_DATABASE_USER: postgres
         REPORTING_DATABASE_USER: postgres
         WAREHOUSE_DATABASE_USER: postgres
         DATABASE_WAREHOUSE_DB_TEST: test_hmis_warehouse
         DEFAULT_FROM: greenriver.testing@mailinator.com
         ENCRYPTION_KEY: strongEncryptionstrongEncryptionstrongEncryption
         FQDN: openpath.host
         HEALTH_DATABASE_ADAPTER: postgresql
         HEALTH_DATABASE_DB_TEST: health_test
         HEALTH_FROM: greenriver.testing@mailinator.com
         HOSTNAME: openpath.host
         PORT: 80
         RAILS_ENV: test
         REPORTING_DATABASE_ADAPTER: postgresql
         REPORTING_DATABASE_DB_TEST: test_boston_reporting
         WAREHOUSE_DATABASE_ADAPTER: postgresql
         WAREHOUSE_DATABASE_DB_TEST: warehouse_test
       run: |
         bin/db_prep
         npm install

     - name: Run tests
       env:
         CLIENT: test
         DATABASE_ADAPTER: postgresql
         DATABASE_APP_DB_TEST: boston_hmis_test
         DATABASE_DB_TEST: boston_cas_test
         DATABASE_HOST: postgres
         HEALTH_DATABASE_HOST: postgres
         REPORTING_DATABASE_HOST: postgres
         WAREHOUSE_DATABASE_HOST: postgres
         DATABASE_PASS: postgres
         HEALTH_DATABASE_PASS: postgres
         REPORTING_DATABASE_PASS: postgres
         WAREHOUSE_DATABASE_PASS: postgres
         DATABASE_USER: postgres
         HEALTH_DATABASE_USER: postgres
         REPORTING_DATABASE_USER: postgres
         WAREHOUSE_DATABASE_USER: postgres
         DATABASE_WAREHOUSE_DB_TEST: test_hmis_warehouse
         DEFAULT_FROM: greenriver.testing@mailinator.com
         ENCRYPTION_KEY: strongEncryptionstrongEncryptionstrongEncryption
         FQDN: openpath.host
         HEALTH_DATABASE_ADAPTER: postgresql
         HEALTH_DATABASE_DB_TEST: health_test
         HEALTH_FROM: greenriver.testing@mailinator.com
         HOSTNAME: openpath.host
         PORT: 80
         RAILS_ENV: test
         REPORTING_DATABASE_ADAPTER: postgresql
         REPORTING_DATABASE_DB_TEST: test_boston_reporting
         WAREHOUSE_DATABASE_ADAPTER: postgresql
         WAREHOUSE_DATABASE_DB_TEST: warehouse_test
         WKHTMLTOPDF_PATH: /usr/local/bin/wkhtmltopdf
       run: |
         bundle exec rspec --color --format documentation
