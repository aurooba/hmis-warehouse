name: Rails Tests

on:
  push:
    branches:
      - '*'
      - '**/*'
  # NOTE: you don't need to build all PRs if you are also building all branches
  # pull_request:
  #   branches:
  #     - '*'
  #     - '**/*'
jobs:
  # Label of the container job
  tests:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-20.04

    # Docker Hub image that the job executes in
    # $RUBY_VERSION
    container: ruby:2.7.2-alpine

    # Service containers to run with job
    services:
      postgres:
        image: postgis/postgis:12-3.1-alpine
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASS: postgres
          POSTGRES_MULTIPLE_EXTENSIONS: postgis,hstore
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:alpine
        ports:
          - 6379:6379
    steps:
      - name: Set up dependencies
        run: |
          apk add --no-cache \
            nodejs yarn npm \
            tzdata \
            git \
            bash \
            freetds-dev \
            icu icu-dev \
            curl libcurl curl-dev \
            imagemagick \
            libmagic file-dev file \
            build-base libxml2-dev libxslt-dev postgresql-dev \
            wkhtmltopdf libgcc libstdc++ libx11 glib libxrender libxext libintl ttf-dejavu ttf-droid ttf-freefont ttf-liberation ttf-ubuntu-font-family \
            chromium nss freetype freetype-dev harfbuzz ca-certificates ttf-freefont \
            lftp postgresql tmux postgis geos geos-dev \
            shared-mime-info

          echo "postgres:5432:*:postgres:postgres" > ~/.pgpass
          chmod 600 ~/.pgpass

          npm install
          gem install bundler --version=2.2.15

      - uses: actions/checkout@v2

      - name: Install gems
        run: |
          bundle config set --local without 'production staging development'
          bundle install --jobs 4 --retry 3
      - name: Run busted test
        run: |
          bundle exec rspec --color --fail-fast --format d spec/models/file_spec.rb
