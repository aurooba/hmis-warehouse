- dropdown_id = "reject-pr-#{pr.id}"
- label = pr.rejected? ? 'Remove/Change Removal' : 'Remove'
- if pr.rejected?
  %strong Removal Reason
  %br
  = Health::PatientReferral.display_rejected_reason(pr.rejected_reason)
  = simple_form_for pr, url: admin_health_patient_referral_path(pr), remote: true do |f|
    = f.input :removal_acknowledged, label: "Acknowledged by #{@sender.receiver_name}", input_html: {class: :jRemoteSubmit}
.patient-referral__reject.float-right.mr-2.mt-1
  = simple_form_for pr, url: admin_health_patient_referral_reject_path(pr), namespace: dropdown_id, remote: true do |f|
    = f.input :rejected_reason, as: :hidden
    - if pr.stop_reason_description
      .mb-4
        %strong #{@sender.receiver_name} Disenrollment Reason
        %br
        = pr.stop_reason_description
    .dropdown
      = link_to '#', id: dropdown_id, data: {toggle: 'dropdown'}, aria: {haspopup: 'true', expanded: 'false'}, class: 'btn btn-secondary btn-sm mb-2' do
        = label
        %span.caret
      %ul.dropdown-menu{aria: {labelledby: dropdown_id}}
        - Health::PatientReferral.rejected_reasons.each do |reason|
          - unless reason[0] == pr.rejected_reason
            %li
              = link_to Health::PatientReferral.display_rejected_reason(reason[0]), '#', data: {behavior: 'reject patient referral', rejected_reason: reason[0]}
    - value = pr.actual_or_pending_disenrollment_date || Date.current.end_of_month
    = f.input :disenrollment_date, as: :date_picker,  label: 'Disenrollment date:', input_html: { value: value }
