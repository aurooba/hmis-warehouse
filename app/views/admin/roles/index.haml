- content_for(:title, t('.title'))
%h1= t '.title'
= render partial: 'menus/admin_tabs'
.table-responsive
  %table.table.c-table.c-table--striped.j-table
    %thead
      %tr.c-table__header.c-table__header--primary
        %th.c-table__cell--border-r-primary.v-align-middle{colspan:1, style: 'min-width: 400px'}
          .d-flex.align-items-center.flex-wrap
            %span.c-table__header-title Permissions
            %span.c-table__icon-key.c-table__icon-key--right
              %i.icon-lock
              %span Administrative Permission

        %th{colspan:@roles.length}
          %div.d-flex.align-items-center
            %span.c-table__header-title.mr-4 Roles
            .c-table__icon-key= page_entries_info @roles, entry_name: _('role')
            .d-flex.ml-auto.align-items-center
              .mr-4.d-flex
                = paginate @roles
              = link_to new_admin_role_path, class: 'btn btn-secondary btn-sm ml-auto' do
                %span.icon-plus
                Add a role
      %tr.c-table__header.c-table__header--secondary
        %th.c-table__cell--border-r-primary{colspan:1}
          .mb-2
            %select.form-control.j-search-permissions.w-100.select2{multiple: true, placeholder: 'Select permission categories'}
              -# %option.disabled{disabled: true} Select cateories
              - Role.permission_categories.each do |cat|
                %option{value: cat}= cat
          %input.form-control.j-search-permissions.w-100{placeholder: 'Search permissions'}
        - @roles.each do |role|
          %th.c-table__cell--border-r-secondary.c-table__header-title.text-center
            = link_to role.name, action: :edit, id: role

    %tbody
      - Role.permissions(exclude_health: true).each do |permission|
        - categories = Role.category_for permission: permission
        %tr.j-permission-row{'data-title' => permission.to_s.humanize, 'data-categories' => categories.to_s.html_safe}
          %td.c-table__cell--border-r-primary{colspan:1}
            .c-table__cell-title.d-flex.align-items-center
              = permission.to_s.humanize
              - if Role.administrative?(permission: permission)
                %i.icon-lock.ml-2{data: {toggle: :tooltip, title: 'Administrative Permission'}}
              .ml-1
                - categories.each do |cat|
                  %span.badge.badge-primary.ml-1=cat
            .c-table__cell-description
              = Role.description_for permission: permission
          - @roles.each do |role|
            - permitted = role.send(permission)
            %td.c-table__cell--border-r-secondary.text-center.v-align-middle.c-table__cell-icon{class: (permitted ? 'c-table__cell-icon--active' : 'c-table__cell-icon--inactive')}
              - if permitted
                %i.icon-check-circle
              - else
                %i.icon-times-circle-o


- content_for :page_js do
  :javascript
    $('.j-table').DataTable({
      // scrollY: '55vh',
      scrollCollapse: true,
      scrollX: true,
      searching: false,
      ordering: false,
      paging: false,
      bInfo: false,
      fixedColumns: {
        leftColumns: 1
      }
    });

    new App.TableSearch({
      inputClass: '.j-search-permissions',
      rowClass: '.j-permission-row',
    })
