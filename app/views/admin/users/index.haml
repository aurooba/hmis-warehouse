- content_for :title, t('.title')
%h1= content_for :title
= render partial: 'menus/admin_tabs'
= render 'login_chart'
.o-page
  .o-page__header
    - @prompt = t '.search_prompt'

    .o-page__controls
      .o-page__search
        = render 'search_form'
    .o-page__action.o-page__action--stacked
      = link_to new_user_invitation_path, class: 'btn btn-primary pull-right mb-2' do
        %span.icon-plus
        Add a User Account

%ul.nav.nav-tabs
  %li.nav-item.active
    = link_to 'Active Accounts', admin_users_path, class: 'nav-link'
  %li.nav-item
    = link_to 'Inactive Accounts', admin_inactive_users_path, class: 'nav-link'

.table-utilities
%p= page_entries_info @users, entry_name: _('user account')
:ruby
  columns = ['last_name', 'first_name', 'email']
  directions = current_sort_order(Hash[columns.map {|x| [x, nil]}])
  titles = {}
  directions.each {| k,v | titles[k] = @users.human_attribute_name(k)}

.row
  .col-sm-12
    .table-responsive
      %table.table.table-sm
        %thead
          %tr
            - titles.each do | k, title |
              %th
                = sort_link(titles[k], k, directions)
                %i{:class => ["fa", "fa-sort-#{directions[k]}"] }
            %th Status
            %th Roles
            %th Audit
            %th Edit
            - if can_impersonate_users?
              %th Become
            %th De-activate
        %tbody
          - @users.each do |user|
            %tr
              %td= user.last_name
              %td= user.first_name
              %td
                = user.email
                - if user.agency
                  .user__agency
                    %em.text-muted= user.agency.name
              %td= render 'user_invitation_status', user: user
              %td= user.roles.map(&:name).join(', ')
              %td
                = link_to admin_user_audit_path(user), class: 'btn btn-link' do
                  %i.icon-eye{data: {toggle: :tooltip, title: 'Audit'}}
              %td
                = link_to(edit_admin_user_path(id: user), class: 'btn btn-link d-flex') do
                  %i.icon-pencil
                  Edit
              - if can_impersonate_users?
                %td
                  - if user.impersonateable_by?(true_user)
                    = link_to impersonate_admin_user_path(true_user, become_id: user.id), method: :post do
                      %i.icon-enter
                      Become
              %td{style: 'white-space: nowrap;'}
                = link_to admin_user_path(user),  method: :delete, data: {confirm: "Would you really like to de-activate the account? #{user.name} will no longer be able to login."}, class: 'btn btn-link d-flex' do
                  %i.icon-cross
                  De-Activate

    %p= paginate @users, params: {sort: directions.compact.keys.first, direction: directions.compact.values.first}
