- client = @cohort_client.client
- if @cohort.user_can_edit_cohort_clients(current_user) && @column.display_for_user(current_user).to_s != 'read_only'
  = simple_form_for @cohort_client, url: cohort_cohort_client_path(@cohort, @cohort_client), method: :patch do |f|
    - if @column.input_type == 'select2'
      - options = {as: :select, label: false, input_html: {class: 'jSubmitOnChange'}}, as: :select_two
      - options[:collection] = @column.available_options
      = f.input @column.column.to_sym, options
  
-# %tr.jCohortClient{data: {cohort_client_id: cohort_client.id, cohort_client_updated_at: cohort_client.updated_at.to_i}}
-#   - if @cohort.user_can_edit_cohort_clients current_user
-#     %td
-#       = link_to edit_cohort_cohort_client_path(@cohort, cohort_client), data: {loads_in_pjax_modal: true, toggle: :tooltip, title: "Edit #{cohort_client.name}", placement: :right}, class: 'btn btn-primary btn-sm' do
-#         %span.icon-pencil

-#   - @cohort.visible_columns.each do |column|
-#     %td
-#       = simple_form_for cohort_client, url: cohort_cohort_client_path(@cohort, cohort_client), method: :patch, remote: true do |f|
-#         - if column.display_for_user(current_user).to_s == 'read_only'
-#           - # treat booleans differently
-#           - if !!column.value(cohort_client) == column.value(cohort_client)
-#             = checkmark column.value(cohort_client)
-#           - elsif column.column.in?(['first_name', 'last_name'])
-#             = link_to_if current_user.can_view_clients?, column.value(cohort_client), client_path(cohort_client.client)
-#           - else 
-#             = column.value(cohort_client)
-#         - elsif column.input_type == 'select2'
-#           - options = {as: :select, label: false, input_html: {class: 'select2'}}
-#           - options[:collection] = column.available_options
-#           = f.input column.column.to_sym, options
-#         - elsif column.input_type == 'radio_buttons'
-#           .cohort-client__input
-#             = f.collection_radio_buttons(column.column, [[true, 'yes'], [false, 'no']], :first, :last, {item_wrapper_tag: :div})
-#         - elsif column.input_type == 'notes'
-#           = link_to cohort_cohort_client_cohort_client_notes_path(@cohort, cohort_client), class: 'badge badge-primary', data: {loads_in_pjax_modal: true} do
-#             #{cohort_client.cohort_client_notes.length}
-#         - elsif column.input_type == 'integer'
-#           - options = {as: column.input_type, label: false, input_html: {size: 4, style: 'max-width: 6em;'}}
-#           - options[:collection] = column.available_options if column.respond_to? :available_options
-#           = f.input column.column.to_sym, options
-#         - else
-#           - options = {as: column.input_type, label: false}
-#           - options[:collection] = column.available_options if column.respond_to? :available_options
-#           = f.input column.column.to_sym, options