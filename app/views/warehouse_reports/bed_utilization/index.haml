- title = "Bed Utilization"
.o-page
  .o-page__header
    - content_for :title, title
    %h1.o-page__title= content_for :title

  = render '/warehouse_reports/breadcrumbs', tab: 'data-quality'

  = simple_form_for @filter, as: :filters, url: warehouse_reports_bed_utilization_index_path, html: { method: :get } do |f|
    - content_for :filters_col_full do
      .row
        .col-sm-3
          = f.input :start, as: :date_picker
        .col-sm-3
          = f.input :end, as: :date_picker
      .row
        .col-sm-4
          = f.input :project_ids, label: 'Project', collection: [], as: :select_two, input_html: {multiple: true, data: {'collection-path' => api_projects_path(selected_project_ids: @filter.project_ids)}, placeholder: 'Any Project' }, include_blank: false
        .col-sm-4
          = f.input :organization_ids, collection: @filter.organization_options_for_select(user: current_user), as: :grouped_select_two, group_method: :last, input_html: { multiple: true, placeholder: 'Any Organization' }, label: 'Organizations'
        .col-sm-4
          = f.input :project_group_ids, collection: @filter.project_groups_options_for_select(user: current_user), as: :select_two,  input_html: { multiple: true, placeholder: 'Any Project Group' }, label: 'Project Groups'


    - content_for :filter_actions do
      = f.button :submit, value: 'Update View'

    = render 'warehouse_reports/filters', f:f
  - if @report.report.present?
    .d-flex
      .ml-auto.mb-4
        - link_params # This is a hack to permit strong params
        = render 'report_downloads/report_download', export: @pdf_export, excel_download_path: warehouse_reports_bed_utilization_index_path(filter_params.merge(format: :xlsx))
  = render 'table'
