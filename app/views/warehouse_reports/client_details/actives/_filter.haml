= simple_form_for @filter, as: :filter, url: polymorphic_path([:warehouse_reports, :client_details, :actives], sub_population: @filter.sub_population), html: { method: :get, class: 'jFilter' } do |f|
  - content_for :filters_col_full do
    .row
      .col-md-8
        = render 'warehouse_reports/date_range_filters', f:f
      - if GrdaWarehouse::Config.get(:multi_coc_installation)
        .col-sm-4
          = f.input :coc_codes, collection: GrdaWarehouse::Lookups::CocCode.options_for_select(user: current_user), as: :select_two, input_html: { multiple: true }, label: 'CoC Limit', required: false
    .row
      .col-md-4
        = f.input :project_type_codes, collection: @filter.available_residential_project_types, input_html: { multiple: true, class: 'select2 jProjectTypes' }
      .col-md-4
        = f.input :organization_ids, collection: @filter.organization_options_for_select(user: current_user), as: :grouped_select, group_method: :last, label: 'Organizations', required: false, input_html: {multiple: true, class: :select2 }
      .col-md-4
        = f.input :project_ids, collection: @filter.project_options_for_select(user: current_user), as: :grouped_select, group_method: :last, label: 'Projects', required: false, input_html: {multiple: true, class: :select2 }
    .row
      .col-md-4
        = f.input :sub_population, collection: GrdaWarehouse::WarehouseReports::Dashboard::Base.available_sub_populations, include_blank: false, input_html: { class: :select2 }
      .col-sm-4
        = f.input :age_ranges, collection: @filter.available_age_ranges, include_blank: false, input_html: { multiple: true, class: :select2 }
      .col-sm-4.d-flex.align-items-center.pt-no-label
        = f.input :heads_of_household, as: :boolean, label: 'Limit to Heads of Household?'

  - content_for :form_js do
    = render 'warehouse_reports/new_range_js'

  - content_for :filter_actions do
    = render 'warehouse_reports/update_view_button', f:f

  = render 'warehouse_reports/filters', f:f
