:ruby
  input_classname = 'j-search'
  group_classname = 'j-category-group'
  recents = @report_definitions.first.clone
  recents[0] = 'Recently Viewed'
  definitions_with_recents = [ recents ] + @report_definitions
  limited_statement = 'Report is not limited by assigned projects.'

- content_for :title, _("Warehouse Reports")
%h1= content_for :title

.c-list-search
  .c-list-search__header
    .c-list-search__select
      %select.form-control.select2{multiple: true, placeholder: 'Select report categories', class: input_classname}
        - definitions_with_recents.each do |(group_name, reports)|
          %option{value: group_name}= group_name
    .c-list-search__search
      %input.form-control{placeholder: 'Search reports', class: input_classname}

  .mb-4.c-list-search__list
    - definitions_with_recents.each_with_index do |(group_name, reports), index|
      - dashed_group_name = group_name.parameterize.dasherize
      .c-list-search__list-group{class: [group_classname, "c-list-search__list-group--#{group_name.parameterize}"], data: {categories: group_name}}
        .c-list-search__list-group-header
          %h3.c-list-search__group-title #{group_name}
          - if reports.any?{ |r| !r.limitable?}
            .c-list-search__legend.ml-auto
              %i.icon-notification
              %em= limited_statement
        %ul{class: "warehouse-reports__#{dashed_group_name}"}
          - reports.each do |report|
            - if report
              %li.c-list-search__item-link.j-item{data: {title: report.name, categories: [group_name].to_s.html_safe}}
                = link_to report.url, class: '' do
                  .c-list-search__item-title
                    %h5= report.name
                    - unless report.limitable?
                      %i.icon-notification{data: {toggle: :tooltip, title: limited_statement}}
                  %p.c-list-search__item-description= report.description.html_safe

- content_for :page_js do
  :javascript
    new App.ListSearch({
      initSelect2: true,
      inputClass: ".#{input_classname}",
      groupClass: ".#{group_classname}",
      itemClass: '.j-item',
      containerClass: '.c-list-search__list',
    })
