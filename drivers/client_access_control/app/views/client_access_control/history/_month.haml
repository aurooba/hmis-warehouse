-# year, month = month
-# For Dev
- year, month = [2023, 2]
- fakeData = ClientHistoryMonth.new(year, month)
- start_of_month = Date.new(year, month, 1)
- date_range = (start_of_month.beginning_of_week..start_of_month.end_of_month.end_of_week)
%h3= start_of_month.strftime '%B %Y'
-#= link_to client_history_path(@client, month_index: )
%button.btn.btn-light Prev
%button.btn.btn-light Next
-#
%div= @dates.inspect

- date_range.each_slice(7) do |week|
  - week_days = week.map{|d| [d, []]}.to_h
  - week.each do |day|
    - if @dates[day].present?
      - week_days[day] = @dates[day]
      
  - week_days.each do |date, services|
    %div=date.day
    - services.each do |service|
      %div= service.inspect
    %div =================================
%div
  = date_range.each_slice(7) do |week|
    .d-flex
      - week_days = week.map{|d| [d, []]}.to_h
      - week_days.each do |date, services|
        %div(style="width: 14.23%; height: 140px;")
          - if start_of_month == date.beginning_of_month
            .client__calendar-date
              = date.day
          - else
            .client__calendar-date.client__calendar-date__previous-month
              = date.day



.d3-calendar.client__calendar{style: 'margin-top:40px;'}


- content_for :page_js do
  :javascript
    var data = #{fakeData.weeks_data.to_json.html_safe}

    var getDateFromString = function(dateString) {
      var parts = dateString.split('-')
      return new Date(parts[0], parts[1]-1, parts[2])
    }

    var getProjectBorderRaius = function(days, date) {
      return days.includes(date) ? '8px' : '0px'
    }

    data.forEach(function(weekData, i) {
      console.log('weekData', weekData)
      var month = weekData.month
      var dayDomain = weekData.days
      var projectDomain = weekData.projects.map(function(d){return d.project_name})
      var minHeight = 170
      var height = 30*projectDomain.length
      if(height < minHeight) {
        height = minHeight
      }
      
      var dayScale = d3.scaleBand()
        .domain(dayDomain)
        .range([0,100])
      var projectScale = d3.scaleBand()
        .domain(projectDomain)
        .range([0, height])
        .paddingInner(0.25)
        .paddingOuter(0.5)

      var container = d3.select('.d3-calendar')

      var week = container.append('div')
        .attr('class', 'client__calendar-week')
        .style('height', height+'px')

      var days = week.selectAll('.client__calendar-day')
        .data(dayDomain)
        .enter()
        .append('div')
          .attr('class', function(d) {
            return 'client__calendar-day day-'+d
          })
          .style('width', dayScale.bandwidth()+'%')
          .append('span')
            .text(function(d) {
              return getDateFromString(d).getDate()
            })
            .attr('class', function(d){
              var date = getDateFromString(d)
              return date.getMonth() === month ? "client__calendar-date" : "client__calendar-date client__calendar-date__previous-month"
            })

      var projects = week.selectAll('.client__calendar-project')
        .data(weekData.projects)
        .enter()
        .append('div')
          .attr('class', 'client__calendar-project')
          .style('position', 'absolute')
          .style('top', function(d){
            return projectScale(d.project_name)+'px'
          })
          .style('left', function(d) {
            var entryDate = dayScale(d.entry_date) >= 0 ? dayScale(d.entry_date) : 0
            return entryDate+'%'
          })
          .style('width', function(d) {
            var entryDate = dayScale(d.entry_date) >= 0 ? dayScale(d.entry_date) : 0
            var exitDate = dayScale(d.exit_date) > 0 ? dayScale(d.exit_date) : 100
            var width = exitDate-entryDate >= 0 ? exitDate-entryDate : 0
            return width+'%'
          })
          .style('height', projectScale.bandwidth()+'px')
          .style('background-color', 'red')
          .style('border-top-left-radius', function(d){
            return getProjectBorderRaius(weekData.days, d.entry_date)
          })
          .style('border-bottom-left-radius', function(d){
            return getProjectBorderRaius(weekData.days, d.entry_date)
          })
          .style('border-top-right-radius', function(d){
            return getProjectBorderRaius(weekData.days, d.exit_date)
          })
          .style('border-bottom-right-radius', function(d){
            return getProjectBorderRaius(weekData.days, d.exit_date)
          })
      
      projects.append('span').text(function(d) {
        return d.project_name
      })


          
    })
    


