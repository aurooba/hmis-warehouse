"""
Autogenerated input type of AddHouseholdMembersToEnrollment
"""
input AddHouseholdMembersToEnrollmentInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  householdId: ID!
  householdMembers: [EnrollmentHouseholdMemberInput!]!

  """
  Start date with format yyyy-mm-dd
  """
  startDate: String!
}

"""
Autogenerated return type of AddHouseholdMembersToEnrollment
"""
type AddHouseholdMembersToEnrollmentPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  enrollments: [Enrollment!]
  errors: [ValidationError!]!
}

"""
HUD Assessment
"""
type Assessment {
  assessmentDate: ISO8601Date!
  assessmentDetail: AssessmentDetail
  assessmentLevel: AssessmentLevel
  assessmentLocation: String!
  assessmentType: AssessmentType
  dateCreated: ISO8601DateTime!
  dateDeleted: ISO8601DateTime
  dateUpdated: ISO8601DateTime!
  enrollment: Enrollment!
  id: ID!
  prioritizationStatus: PrioritizationStatus
  user: User!
}

"""
HUD AssessmentDetail
"""
type AssessmentDetail {
  assessment: Assessment!
  dataCollectionStage: DataCollectionStage
  definition: FormDefinition!
  id: ID!
  role: AssessmentRole!
  status: String!
}

"""
HUD AssessmentLevel (4.19.4)
"""
enum AssessmentLevel {
  """
  (1) Crisis Needs Assessment
  """
  CRISIS_NEEDS_ASSESSMENT

  """
  (2) Housing Needs Assessment
  """
  HOUSING_NEEDS_ASSESSMENT
}

"""
Assessment Role
"""
enum AssessmentRole {
  ANNUAL
  CE
  CUSTOM
  EXIT
  INTAKE
  POST_EXIT
  UPDATE
}

"""
HUD Assessment Sorting Options
"""
enum AssessmentSortOption {
  ASSESSMENT_DATE
}

"""
HUD AssessmentType (4.19.3)
"""
enum AssessmentType {
  """
  (3) In Person
  """
  IN_PERSON

  """
  (1) Phone
  """
  PHONE

  """
  (2) Virtual
  """
  VIRTUAL
}

type AssessmentsPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [Assessment!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

"""
HUD Availability (2.7.4)
"""
enum Availability {
  """
  (3) Overflow
  """
  OVERFLOW

  """
  (2) Seasonal
  """
  SEASONAL

  """
  (1) Year-round
  """
  YEAR_ROUND
}

"""
HUD Bed Type (2.7.3)
"""
enum BedType {
  """
  (1) Facility-based
  """
  FACILITY_BASED

  """
  (3) Other
  """
  OTHER

  """
  (2) Voucher
  """
  VOUCHER
}

"""
HUD Client
"""
type Client {
  dateCreated: ISO8601DateTime!
  dateDeleted: ISO8601DateTime
  dateUpdated: ISO8601DateTime!

  """
  Date of birth as format yyyy-mm-dd
  """
  dob: ISO8601Date
  enrollments(limit: Int, offset: Int, sortOrder: EnrollmentSortOption): EnrollmentsPaginated!
  firstName: String
  id: ID!
  lastName: String
  nameSuffix: String
  personalId: String!
  preferredName: String
  pronouns: String
  ssnSerial: String
}

"""
HMIS Client input
"""
input ClientInput {
  dob: String
  dobDataQuality: DOBDataQuality
  ethnicity: Ethnicity
  firstName: String
  gender: [Gender!]
  lastName: String
  middleName: String
  nameDataQuality: NameDataQuality
  nameSuffix: String
  preferredName: String
  race: [Race!]
  ssn: String
  ssnDataQuality: SSNDataQuality
  veteranStatus: VeteranStatus
}

"""
HMIS Client search input
"""
input ClientSearchInput {
  """
  Date of birth as format yyyy-mm-dd
  """
  dob: String
  firstName: String

  """
  Client primary key
  """
  id: ID
  lastName: String
  organizations: [ID!]
  personalId: String
  preferredName: String
  projects: [ID!]

  """
  Last 4 digits of SSN
  """
  ssnSerial: String

  """
  Omnisearch string
  """
  textSearch: String
  warehouseId: String
}

"""
HUD Client Sorting Options
"""
enum ClientSortOption {
  LAST_NAME_ASC
  LAST_NAME_DESC
}

type ClientsPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [Client!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

"""
Autogenerated input type of CreateAssessment
"""
input CreateAssessmentInput {
  """
  Date with format yyyy-mm-dd
  """
  assessmentDate: String
  assessmentRole: AssessmentRole!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  enrollmentId: ID!
}

"""
Autogenerated return type of CreateAssessment
"""
type CreateAssessmentPayload {
  assessment: Assessment

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
}

"""
Autogenerated input type of CreateClient
"""
input CreateClientInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  input: ClientInput!
}

"""
Autogenerated return type of CreateClient
"""
type CreateClientPayload {
  client: Client

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
}

"""
Autogenerated input type of CreateEnrollment
"""
input CreateEnrollmentInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  householdMembers: [EnrollmentHouseholdMemberInput!]!
  inProgress: Boolean
  projectId: ID!

  """
  Start date with format yyyy-mm-dd
  """
  startDate: String!
}

"""
Autogenerated return type of CreateEnrollment
"""
type CreateEnrollmentPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  enrollments: [Enrollment!]
  errors: [ValidationError!]!
}

"""
Autogenerated input type of CreateFunder
"""
input CreateFunderInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  input: FunderInput!
}

"""
Autogenerated return type of CreateFunder
"""
type CreateFunderPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
  funder: Funder
}

"""
Autogenerated input type of CreateInventory
"""
input CreateInventoryInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  input: InventoryInput!
}

"""
Autogenerated return type of CreateInventory
"""
type CreateInventoryPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
  inventory: Inventory
}

"""
Autogenerated input type of CreateOrganization
"""
input CreateOrganizationInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  input: OrganizationInput!
}

"""
Autogenerated return type of CreateOrganization
"""
type CreateOrganizationPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
  organization: Organization
}

"""
Autogenerated input type of CreateProjectCoc
"""
input CreateProjectCocInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  input: ProjectCocInput!
}

"""
Autogenerated return type of CreateProjectCoc
"""
type CreateProjectCocPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
  projectCoc: ProjectCoc
}

"""
Autogenerated input type of CreateProject
"""
input CreateProjectInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  input: ProjectInput!
}

"""
Autogenerated return type of CreateProject
"""
type CreateProjectPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
  project: Project
}

"""
Autogenerated input type of CreateService
"""
input CreateServiceInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  input: ServiceInput!
}

"""
Autogenerated return type of CreateService
"""
type CreateServicePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
  service: Service
}

"""
HUD DOB Data Quality (3.03.2)
"""
enum DOBDataQuality {
  """
  (2) Approximate or partial DOB reported
  """
  DOB_APPROXIMATE_OR_PARTIAL_DOB_REPORTED

  """
  (8) Client doesn't know
  """
  DOB_CLIENT_DOESN_T_KNOW

  """
  (9) Client refused
  """
  DOB_CLIENT_REFUSED

  """
  (99) Data not collected
  """
  DOB_DATA_NOT_COLLECTED

  """
  (1) Full DOB reported
  """
  DOB_FULL_DOB_REPORTED
}

"""
HUD Data Collection Stage (5.03.1)
"""
enum DataCollectionStage {
  """
  (5) Annual assessment
  """
  ANNUAL_ASSESSMENT

  """
  (6) Post-exit
  """
  POST_EXIT

  """
  (1) Project entry
  """
  PROJECT_ENTRY

  """
  (3) Project exit
  """
  PROJECT_EXIT

  """
  (2) Update
  """
  UPDATE
}

"""
Autogenerated input type of DeleteEnrollment
"""
input DeleteEnrollmentInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of DeleteEnrollment
"""
type DeleteEnrollmentPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  enrollment: Enrollment
  errors: [ValidationError!]!
}

"""
Autogenerated input type of DeleteFunder
"""
input DeleteFunderInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of DeleteFunder
"""
type DeleteFunderPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
  funder: Funder
}

"""
Autogenerated input type of DeleteInventory
"""
input DeleteInventoryInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of DeleteInventory
"""
type DeleteInventoryPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
  inventory: Inventory
}

"""
Autogenerated input type of DeleteOrganization
"""
input DeleteOrganizationInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of DeleteOrganization
"""
type DeleteOrganizationPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
  organization: Organization
}

"""
Autogenerated input type of DeleteProjectCoc
"""
input DeleteProjectCocInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of DeleteProjectCoc
"""
type DeleteProjectCocPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
  projectCoc: ProjectCoc
}

"""
Autogenerated input type of DeleteProject
"""
input DeleteProjectInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of DeleteProject
"""
type DeleteProjectPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
  project: Project
}

"""
Autogenerated input type of DeleteService
"""
input DeleteServiceInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of DeleteService
"""
type DeleteServicePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
  service: Service
}

"""
HUD Enrollment
"""
type Enrollment {
  assessments(limit: Int, offset: Int, sortOrder: AssessmentSortOption): AssessmentsPaginated!
  client: Client!
  dateCreated: ISO8601DateTime!
  dateDeleted: ISO8601DateTime
  dateUpdated: ISO8601DateTime!
  entryDate: ISO8601Date
  events(limit: Int, offset: Int, sortOrder: EventSortOption): EventsPaginated!
  exitDate: ISO8601Date
  household: Household!
  id: ID!
  inProgress: Boolean!
  project: Project!
  relationshipToHoH: RelationshipToHoH!
  services(limit: Int, offset: Int, sortOrder: ServiceSortOption): ServicesPaginated!
}

"""
HMIS Enrollment household member input
"""
input EnrollmentHouseholdMemberInput {
  id: ID!
  relationshipToHoH: RelationshipToHoH!
}

"""
HUD Enrollment Sorting Options
"""
enum EnrollmentSortOption {
  MOST_RECENT
}

type EnrollmentsPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [Enrollment!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

"""
HUD Ethnicity (3.05.1)
"""
enum Ethnicity {
  """
  (1) Hispanic/Latin(a)(o)(x)
  """
  ETHNICITY_HISPANIC_LATIN_A_O_X_

  """
  (0) Non-Hispanic/Non-Latin(a)(o)(x)
  """
  ETHNICITY_NON_HISPANIC_NON_LATIN_A_O_X_

  """
  (99) Data not collected
  """
  ETHNICITY_NOT_COLLECTED

  """
  (9) Client refused
  """
  ETHNICITY_REFUSED

  """
  (8) Client doesn't know
  """
  ETHNICITY_UNKNOWN
}

"""
HUD Event
"""
type Event {
  client: Client!
  dateCreated: ISO8601DateTime!
  dateDeleted: ISO8601DateTime
  dateUpdated: ISO8601DateTime!
  enrollment: Enrollment!
  event: EventType!
  eventDate: ISO8601DateTime!
  id: ID!
  locationCrisisOrPhHousing: String
  probSolDivRrResult: ProbSolDivRRResult
  referralCaseManageAfter: ReferralCaseManageAfter
  referralResult: ReferralResult
  resultDate: ISO8601DateTime
  user: User!
}

"""
HUD Event Sorting Options
"""
enum EventSortOption {
  EVENT_DATE
}

"""
HUD EventType (4.20.2)
"""
enum EventType {
  """
  (2) Problem Solving/Diversion/Rapid Resolution intervention or service
  """
  PROBLEM_SOLVING_DIVERSION_RAPID_RESOLUTION_INTERVENTION_OR_SERVICE

  """
  (18) Referral to a Housing Stability Voucher
  """
  REFERRAL_TO_A_HOUSING_STABILITY_VOUCHER

  """
  (16) Referral to emergency assistance/flex fund/furniture assistance
  """
  REFERRAL_TO_EMERGENCY_ASSISTANCE_FLEX_FUND_FURNITURE_ASSISTANCE

  """
  (17) Referral to Emergency Housing Voucher (EHV)
  """
  REFERRAL_TO_EMERGENCY_HOUSING_VOUCHER_EHV_

  """
  (10) Referral to Emergency Shelter bed opening
  """
  REFERRAL_TO_EMERGENCY_SHELTER_BED_OPENING

  """
  (7) Referral to Housing Navigation project or services
  """
  REFERRAL_TO_HOUSING_NAVIGATION_PROJECT_OR_SERVICES

  """
  (12) Referral to Joint TH-RRH project/unit/resource opening
  """
  REFERRAL_TO_JOINT_TH_RRH_PROJECT_UNIT_RESOURCE_OPENING

  """
  (8) Referral to Non-continuum services: Ineligible for continuum services
  """
  REFERRAL_TO_NON_CONTINUUM_SERVICES_INELIGIBLE_FOR_CONTINUUM_SERVICES

  """
  (9) Referral to Non-continuum services: No availability in continuum services
  """
  REFERRAL_TO_NON_CONTINUUM_SERVICES_NO_AVAILABILITY_IN_CONTINUUM_SERVICES

  """
  (15) Referral to Other PH project/unit/resource opening
  """
  REFERRAL_TO_OTHER_PH_PROJECT_UNIT_RESOURCE_OPENING

  """
  (5) Referral to Post-placement/ follow-up case management
  """
  REFERRAL_TO_POST_PLACEMENT_FOLLOW_UP_CASE_MANAGEMENT

  """
  (1) Referral to Prevention Assistance project
  """
  REFERRAL_TO_PREVENTION_ASSISTANCE_PROJECT

  """
  (14) Referral to PSH project resource opening
  """
  REFERRAL_TO_PSH_PROJECT_RESOURCE_OPENING

  """
  (13) Referral to RRH project resource opening
  """
  REFERRAL_TO_RRH_PROJECT_RESOURCE_OPENING

  """
  (3) Referral to scheduled Coordinated Entry Crisis Needs Assessment
  """
  REFERRAL_TO_SCHEDULED_COORDINATED_ENTRY_CRISIS_NEEDS_ASSESSMENT

  """
  (4) Referral to scheduled Coordinated Entry Housing Needs Assessment
  """
  REFERRAL_TO_SCHEDULED_COORDINATED_ENTRY_HOUSING_NEEDS_ASSESSMENT

  """
  (6) Referral to Street Outreach project or services
  """
  REFERRAL_TO_STREET_OUTREACH_PROJECT_OR_SERVICES

  """
  (11) Referral to Transitional Housing bed/unit opening
  """
  REFERRAL_TO_TRANSITIONAL_HOUSING_BED_UNIT_OPENING
}

type EventsPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [Event!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

"""
HUD FormDefinition
"""
type FormDefinition {
  definition: JsonObject!
  id: ID!
  identifier: String!
  role: AssessmentRole!
  status: String!
  version: Int!
}

"""
HUD Funder
"""
type Funder {
  dateCreated: ISO8601DateTime!
  dateDeleted: ISO8601DateTime
  dateUpdated: ISO8601DateTime!
  endDate: ISO8601Date
  funder: FundingSource!
  grantId: String!
  id: ID!
  otherFunder: String
  project: Project!
  startDate: ISO8601Date!
}

"""
HMIS Funder input
"""
input FunderInput {
  endDate: ISO8601Date
  funder: FundingSource
  grantId: String
  otherFunder: String
  projectId: ID
  startDate: ISO8601Date
}

"""
HUD Funder Sorting Options
"""
enum FunderSortOption {
  START_DATE
}

type FundersPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [Funder!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

"""
HUD Funding Source (2.06.1)
"""
enum FundingSource {
  """
  (21) HHS: PATH - Street Outreach & Supportive Services Only
  """
  HHS_PATH_STREET_OUTREACH_SUPPORTIVE_SERVICES_ONLY

  """
  (22) HHS: RHY - Basic Center Program (prevention and shelter)
  """
  HHS_RHY_BASIC_CENTER_PROGRAM_PREVENTION_AND_SHELTER_

  """
  (26) HHS: RHY - Demonstration Project
  """
  HHS_RHY_DEMONSTRATION_PROJECT

  """
  (23) HHS: RHY - Maternity Group Home for Pregnant and Parenting Youth
  """
  HHS_RHY_MATERNITY_GROUP_HOME_FOR_PREGNANT_AND_PARENTING_YOUTH

  """
  (25) HHS: RHY - Street Outreach Project
  """
  HHS_RHY_STREET_OUTREACH_PROJECT

  """
  (24) HHS: RHY - Transitional Living Program
  """
  HHS_RHY_TRANSITIONAL_LIVING_PROGRAM

  """
  (1) HUD: CoC - Homelessness Prevention (High Performing Communities Only)
  """
  HUD_COC_HOMELESSNESS_PREVENTION_HIGH_PERFORMING_COMMUNITIES_ONLY_

  """
  (49) HUD: CoC - Joint Component RRH/PSH 
  """
  HUD_COC_JOINT_COMPONENT_RRH_PSH_

  """
  (44) HUD: CoC - Joint Component TH/RRH
  """
  HUD_COC_JOINT_COMPONENT_TH_RRH

  """
  (2) HUD: CoC - Permanent Supportive Housing
  """
  HUD_COC_PERMANENT_SUPPORTIVE_HOUSING

  """
  (3) HUD: CoC - Rapid Re-Housing
  """
  HUD_COC_RAPID_RE_HOUSING

  """
  (6) HUD: CoC - Safe Haven
  """
  HUD_COC_SAFE_HAVEN

  """
  (7) HUD: CoC - Single Room Occupancy (SRO)
  """
  HUD_COC_SINGLE_ROOM_OCCUPANCY_SRO_

  """
  (4) HUD: CoC - Supportive Services Only
  """
  HUD_COC_SUPPORTIVE_SERVICES_ONLY

  """
  (5) HUD: CoC - Transitional Housing
  """
  HUD_COC_TRANSITIONAL_HOUSING

  """
  (43) HUD: CoC - Youth Homeless Demonstration Program (YHDP)
  """
  HUD_COC_YOUTH_HOMELESS_DEMONSTRATION_PROGRAM_YHDP_

  """
  (47) HUD: ESG - CV
  """
  HUD_ESG_CV

  """
  (8) HUD: ESG - Emergency Shelter (operating and/or essential services)
  """
  HUD_ESG_EMERGENCY_SHELTER_OPERATING_AND_OR_ESSENTIAL_SERVICES_

  """
  (9) HUD: ESG - Homelessness Prevention 
  """
  HUD_ESG_HOMELESSNESS_PREVENTION_

  """
  (10) HUD: ESG - Rapid Rehousing
  """
  HUD_ESG_RAPID_REHOUSING

  """
  (11) HUD: ESG - Street Outreach
  """
  HUD_ESG_STREET_OUTREACH

  """
  (50) HUD: HOME
  """
  HUD_HOME

  """
  (51) HUD: HOME (ARP)
  """
  HUD_HOME_ARP_

  """
  (48) HUD: HOPWA - CV
  """
  HUD_HOPWA_CV

  """
  (13) HUD: HOPWA - Hotel/Motel Vouchers
  """
  HUD_HOPWA_HOTEL_MOTEL_VOUCHERS

  """
  (14) HUD: HOPWA - Housing Information
  """
  HUD_HOPWA_HOUSING_INFORMATION

  """
  (15) HUD: HOPWA - Permanent Housing (facility based or TBRA)
  """
  HUD_HOPWA_PERMANENT_HOUSING_FACILITY_BASED_OR_TBRA_

  """
  (16) HUD: HOPWA - Permanent Housing Placement
  """
  HUD_HOPWA_PERMANENT_HOUSING_PLACEMENT

  """
  (17) HUD: HOPWA - Short-Term Rent, Mortgage, Utility assistance
  """
  HUD_HOPWA_SHORT_TERM_RENT_MORTGAGE_UTILITY_ASSISTANCE

  """
  (18) HUD: HOPWA - Short-Term Supportive Facility
  """
  HUD_HOPWA_SHORT_TERM_SUPPORTIVE_FACILITY

  """
  (19) HUD: HOPWA - Transitional Housing (facility based or TBRA)
  """
  HUD_HOPWA_TRANSITIONAL_HOUSING_FACILITY_BASED_OR_TBRA_

  """
  (20) HUD: HUD/VASH
  """
  HUD_HUD_VASH

  """
  (35) HUD: Pay for Success
  """
  HUD_PAY_FOR_SUCCESS

  """
  (52) HUD: PIH (Emergency Housing Voucher)
  """
  HUD_PIH_EMERGENCY_HOUSING_VOUCHER_

  """
  (36) HUD: Public and Indian Housing (PIH) Programs
  """
  HUD_PUBLIC_AND_INDIAN_HOUSING_PIH_PROGRAMS

  """
  (12) HUD: Rural Housing Stability Assistance Program 
  """
  HUD_RURAL_HOUSING_STABILITY_ASSISTANCE_PROGRAM_

  """
  (46) Local or Other Funding Source
  """
  LOCAL_OR_OTHER_FUNDING_SOURCE

  """
  (34) N/A
  """
  N_A

  """
  (30) VA: Community Contract Safe Haven Program
  """
  VA_COMMUNITY_CONTRACT_SAFE_HAVEN_PROGRAM

  """
  (32) VA: Compensated Work Therapy Transitional Residence
  """
  VA_COMPENSATED_WORK_THERAPY_TRANSITIONAL_RESIDENCE

  """
  (27) VA: CRS Contract Residential Services
  """
  VA_CRS_CONTRACT_RESIDENTIAL_SERVICES

  """
  (37) VA: Grant Per Diem - Bridge Housing
  """
  VA_GRANT_PER_DIEM_BRIDGE_HOUSING

  """
  (45) VA: Grant Per Diem - Case Management/Housing Retention
  """
  VA_GRANT_PER_DIEM_CASE_MANAGEMENT_HOUSING_RETENTION

  """
  (40) VA: Grant Per Diem - Clinical Treatment
  """
  VA_GRANT_PER_DIEM_CLINICAL_TREATMENT

  """
  (39) VA: Grant Per Diem - Hospital to Housing
  """
  VA_GRANT_PER_DIEM_HOSPITAL_TO_HOUSING

  """
  (38) VA: Grant Per Diem - Low Demand
  """
  VA_GRANT_PER_DIEM_LOW_DEMAND

  """
  (41) VA: Grant Per Diem - Service Intensive Transitional Housing
  """
  VA_GRANT_PER_DIEM_SERVICE_INTENSIVE_TRANSITIONAL_HOUSING

  """
  (42) VA: Grant Per Diem - Transition in Place
  """
  VA_GRANT_PER_DIEM_TRANSITION_IN_PLACE

  """
  (33) VA: Supportive Services for Veteran Families
  """
  VA_SUPPORTIVE_SERVICES_FOR_VETERAN_FAMILIES
}

"""
HUD Gender (1.7)
"""
enum Gender {
  """
  (8) Client doesn't know
  """
  GENDER_CLIENT_DOESN_T_KNOW

  """
  (9) Client refused
  """
  GENDER_CLIENT_REFUSED

  """
  (99) Data not collected
  """
  GENDER_DATA_NOT_COLLECTED

  """
  (0) Female
  """
  GENDER_FEMALE

  """
  (1) Male
  """
  GENDER_MALE

  """
  (4) A gender other than singularly female or male (e.g., non-binary, genderfluid, agender, culturally specific gender)
  """
  GENDER_NO_SINGLE_GENDER

  """
  (6) Questioning
  """
  GENDER_QUESTIONING

  """
  (5) Transgender
  """
  GENDER_TRANSGENDER
}

"""
HUD Geography Type (2.8.7)
"""
enum GeographyType {
  """
  (3) Rural
  """
  RURAL

  """
  (2) Suburban
  """
  SUBURBAN

  """
  (99) Unknown / data not collected
  """
  UNKNOWN_DATA_NOT_COLLECTED

  """
  (1) Urban
  """
  URBAN
}

"""
HUD HOPWAMedAssistedLivingFac (2.02.9)
"""
enum HOPWAMedAssistedLivingFac {
  """
  (0) No
  """
  NO

  """
  (2) Non-HOPWA Funded Project
  """
  NON_HOPWA_FUNDED_PROJECT

  """
  (1) Yes
  """
  YES
}

"""
HUD Household
"""
type Household {
  householdClients: [HouseholdClient!]!
  id: ID!
}

"""
HUD Client within a Household
"""
type HouseholdClient {
  client: Client!
  enrollment: Enrollment!
  id: ID!
  relationshipToHoH: RelationshipToHoH!
}

"""
HUD Household Type (2.7.2)
"""
enum HouseholdType {
  """
  (1) Households without children
  """
  HOUSEHOLDS_WITHOUT_CHILDREN

  """
  (3) Households with at least one adult and one child
  """
  HOUSEHOLDS_WITH_AT_LEAST_ONE_ADULT_AND_ONE_CHILD

  """
  (4) Households with only children
  """
  HOUSEHOLDS_WITH_ONLY_CHILDREN
}

"""
HUD HousingType (2.02.D)
"""
enum HousingType {
  """
  (2) Site-based - clustered / multiple sites
  """
  SITE_BASED_CLUSTERED_MULTIPLE_SITES

  """
  (1) Site-based - single site
  """
  SITE_BASED_SINGLE_SITE

  """
  (3) Tenant-based - scattered site
  """
  TENANT_BASED_SCATTERED_SITE
}

"""
An ISO 8601-encoded date
"""
scalar ISO8601Date

"""
An ISO 8601-encoded datetime
"""
scalar ISO8601DateTime

type InventoriesPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [Inventory!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

"""
HUD Inventory
"""
type Inventory {
  availability: Availability
  bedInventory: Int!
  chBedInventory: Int
  chVetBedInventory: Int
  chYouthBedInventory: Int
  chYouthVetBedInventory: Int
  cocCode: String!
  dateCreated: ISO8601DateTime!
  dateDeleted: ISO8601DateTime
  dateUpdated: ISO8601DateTime!
  esBedType: BedType
  householdType: HouseholdType!
  id: ID!
  inventoryEndDate: ISO8601Date
  inventoryStartDate: ISO8601Date!
  otherBedInventory: Int
  project: Project!
  unitInventory: Int!
  vetBedInventory: Int
  youthBedInventory: Int
  youthVetBedInventory: Int
}

"""
HMIS Inventory input
"""
input InventoryInput {
  availability: Availability
  bedInventory: Int
  chBedInventory: Int
  chVetBedInventory: Int
  chYouthBedInventory: Int
  chYouthVetBedInventory: Int
  cocCode: String
  esBedType: BedType
  householdType: HouseholdType
  inventoryEndDate: ISO8601Date
  inventoryStartDate: ISO8601Date
  otherBedInventory: Int
  projectId: ID
  unitInventory: Int
  vetBedInventory: Int
  youthBedInventory: Int
  youthVetBedInventory: Int
}

"""
HUD Inventory Sorting Options
"""
enum InventorySortOption {
  START_DATE
}

"""
Arbitrary JSON Type
"""
scalar JsonObject

type Mutation {
  addHouseholdMembersToEnrollment(
    """
    Parameters for AddHouseholdMembersToEnrollment
    """
    input: AddHouseholdMembersToEnrollmentInput!
  ): AddHouseholdMembersToEnrollmentPayload
  createAssessment(
    """
    Parameters for CreateAssessment
    """
    input: CreateAssessmentInput!
  ): CreateAssessmentPayload
  createClient(
    """
    Parameters for CreateClient
    """
    input: CreateClientInput!
  ): CreateClientPayload
  createEnrollment(
    """
    Parameters for CreateEnrollment
    """
    input: CreateEnrollmentInput!
  ): CreateEnrollmentPayload
  createFunder(
    """
    Parameters for CreateFunder
    """
    input: CreateFunderInput!
  ): CreateFunderPayload
  createInventory(
    """
    Parameters for CreateInventory
    """
    input: CreateInventoryInput!
  ): CreateInventoryPayload
  createOrganization(
    """
    Parameters for CreateOrganization
    """
    input: CreateOrganizationInput!
  ): CreateOrganizationPayload
  createProject(
    """
    Parameters for CreateProject
    """
    input: CreateProjectInput!
  ): CreateProjectPayload
  createProjectCoc(
    """
    Parameters for CreateProjectCoc
    """
    input: CreateProjectCocInput!
  ): CreateProjectCocPayload
  createService(
    """
    Parameters for CreateService
    """
    input: CreateServiceInput!
  ): CreateServicePayload
  deleteEnrollment(
    """
    Parameters for DeleteEnrollment
    """
    input: DeleteEnrollmentInput!
  ): DeleteEnrollmentPayload
  deleteFunder(
    """
    Parameters for DeleteFunder
    """
    input: DeleteFunderInput!
  ): DeleteFunderPayload
  deleteInventory(
    """
    Parameters for DeleteInventory
    """
    input: DeleteInventoryInput!
  ): DeleteInventoryPayload
  deleteOrganization(
    """
    Parameters for DeleteOrganization
    """
    input: DeleteOrganizationInput!
  ): DeleteOrganizationPayload
  deleteProject(
    """
    Parameters for DeleteProject
    """
    input: DeleteProjectInput!
  ): DeleteProjectPayload
  deleteProjectCoc(
    """
    Parameters for DeleteProjectCoc
    """
    input: DeleteProjectCocInput!
  ): DeleteProjectCocPayload
  deleteService(
    """
    Parameters for DeleteService
    """
    input: DeleteServiceInput!
  ): DeleteServicePayload
  setHoHForEnrollment(
    """
    Parameters for SetHoHForEnrollment
    """
    input: SetHoHForEnrollmentInput!
  ): SetHoHForEnrollmentPayload
  updateEnrollment(
    """
    Parameters for UpdateEnrollment
    """
    input: UpdateEnrollmentInput!
  ): UpdateEnrollmentPayload
  updateFunder(
    """
    Parameters for UpdateFunder
    """
    input: UpdateFunderInput!
  ): UpdateFunderPayload
  updateInventory(
    """
    Parameters for UpdateInventory
    """
    input: UpdateInventoryInput!
  ): UpdateInventoryPayload
  updateOrganization(
    """
    Parameters for UpdateOrganization
    """
    input: UpdateOrganizationInput!
  ): UpdateOrganizationPayload
  updateProject(
    """
    Parameters for UpdateProject
    """
    input: UpdateProjectInput!
  ): UpdateProjectPayload
  updateProjectCoc(
    """
    Parameters for UpdateProjectCoc
    """
    input: UpdateProjectCocInput!
  ): UpdateProjectCocPayload
  updateService(
    """
    Parameters for UpdateService
    """
    input: UpdateServiceInput!
  ): UpdateServicePayload
}

"""
HUD NameDataQuality (3.01.5)
"""
enum NameDataQuality {
  """
  (8) Client doesn't know
  """
  NAME_CLIENT_DOESN_T_KNOW

  """
  (9) Client refused
  """
  NAME_CLIENT_REFUSED

  """
  (99) Data not collected
  """
  NAME_DATA_NOT_COLLECTED

  """
  (1) Full name reported
  """
  NAME_FULL_NAME_REPORTED

  """
  (2) Partial, street name, or code name reported
  """
  NAME_PARTIAL_STREET_NAME_OR_CODE_NAME_REPORTED
}

"""
HUD Organization
"""
type Organization {
  contactInformation: String
  dateCreated: ISO8601DateTime!
  dateDeleted: ISO8601DateTime
  dateUpdated: ISO8601DateTime!
  description: String
  id: ID!
  organizationName: String!

  """
  Get a list of projects for this organization
  """
  projects(projectTypes: [ProjectType!], sortOrder: ProjectSortOption): [Project!]!
  victimServiceProvider: Boolean
}

"""
HMIS Organization input
"""
input OrganizationInput {
  contactInformation: String
  description: String
  organizationName: String
  victimServiceProvider: Boolean
}

"""
HUD Organization Sorting Options
"""
enum OrganizationSortOption {
  NAME
}

"""
HUD PATHReferralOutcome (P2.A)
"""
enum PATHReferralOutcome {
  """
  (1) Attained
  """
  ATTAINED

  """
  (2) Not attained
  """
  NOT_ATTAINED

  """
  (3) Unknown
  """
  UNKNOWN
}

"""
HUD PrioritizationStatus (4.19.7)
"""
enum PrioritizationStatus {
  """
  (2) Not placed on prioritization list
  """
  NOT_PLACED_ON_PRIORITIZATION_LIST

  """
  (1) Placed on prioritization list
  """
  PLACED_ON_PRIORITIZATION_LIST
}

"""
HUD ProbSolDivRRResult (1.7)
"""
enum ProbSolDivRRResult {
  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  (0) No
  """
  NO

  """
  (1) Yes
  """
  YES
}

"""
HUD Project
"""
type Project {
  HMISParticipatingProject: Boolean
  HOPWAMedAssistedLivingFac: HOPWAMedAssistedLivingFac
  contactInformation: String
  continuumProject: Boolean
  dateCreated: ISO8601DateTime!
  dateDeleted: ISO8601DateTime
  dateUpdated: ISO8601DateTime!
  description: String
  funders(limit: Int, offset: Int, sortOrder: FunderSortOption): FundersPaginated!
  housingType: HousingType
  id: ID!
  inventories(limit: Int, offset: Int, sortOrder: InventorySortOption): InventoriesPaginated!
  operatingEndDate: ISO8601Date
  operatingStartDate: ISO8601Date!
  organization: Organization!
  projectCocs(limit: Int, offset: Int): ProjectCocsPaginated!
  projectName: String!
  projectType: ProjectType
  residentialAffiliation: Boolean
  targetPopulation: TargetPopulation
  trackingMethod: TrackingMethod
}

"""
HUD Project CoC
"""
type ProjectCoc {
  address1: String
  address2: String
  city: String
  cocCode: String!
  dateCreated: ISO8601DateTime!
  dateDeleted: ISO8601DateTime
  dateUpdated: ISO8601DateTime!
  geocode: String!
  geographyType: GeographyType
  id: ID!
  project: Project!
  state: String
  zip: String
}

"""
HMIS Project CoC input
"""
input ProjectCocInput {
  address1: String
  address2: String
  city: String
  cocCode: String
  geocode: String
  geographyType: GeographyType
  projectId: ID
  state: String
  zip: String
}

type ProjectCocsPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [ProjectCoc!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

"""
HMIS Project input
"""
input ProjectInput {
  HMISParticipatingProject: Boolean
  HOPWAMedAssistedLivingFac: HOPWAMedAssistedLivingFac
  contactInformation: String
  continuumProject: Boolean
  description: String
  housingType: HousingType

  """
  Date with format yyyy-mm-dd
  """
  operatingEndDate: String

  """
  Date with format yyyy-mm-dd
  """
  operatingStartDate: String
  organizationId: ID
  projectName: String
  projectType: ProjectType
  residentialAffiliation: Boolean
  targetPopulation: TargetPopulation
  trackingMethod: TrackingMethod
}

"""
HUD Project Sorting Options
"""
enum ProjectSortOption {
  NAME
  ORGANIZATION_AND_NAME
}

"""
HUD Project Types
"""
enum ProjectType {
  """
  Coordinated Entry
  """
  CE

  """
  Day Shelter
  """
  DAY_SHELTER

  """
  Emergency Shelter
  """
  ES

  """
  Permanent Housing Only
  """
  OPH

  """
  Other
  """
  OTHER

  """
  Permanent Housing
  """
  PH

  """
  Homelessness Prevention
  """
  PREVENTION

  """
  Permanent Supportive Housing
  """
  PSH

  """
  Rapid Re-Housing
  """
  RRH

  """
  Services Only
  """
  SERVICES_ONLY

  """
  Safe Haven
  """
  SH

  """
  Street Outreach
  """
  SO

  """
  Transitional Housing
  """
  TH
}

type Query {
  """
  Assessment lookup
  """
  assessment(id: ID!): Assessment

  """
  Client lookup
  """
  client(id: ID!): Client

  """
  Search for clients
  """
  clientSearch(input: ClientSearchInput!, limit: Int, offset: Int, sortOrder: ClientSortOption): ClientsPaginated!

  """
  Enrollment lookup
  """
  enrollment(id: ID!): Enrollment

  """
  Funder lookup
  """
  funder(id: ID!): Funder

  """
  Inventory lookup
  """
  inventory(id: ID!): Inventory

  """
  Organization lookup
  """
  organization(id: ID!): Organization

  """
  Get a list of organizations
  """
  organizations(sortOrder: OrganizationSortOption): [Organization!]!

  """
  Project lookup
  """
  project(id: ID!): Project

  """
  Project CoC lookup
  """
  projectCoc(id: ID!): ProjectCoc

  """
  Get a list of projects
  """
  projects(projectTypes: [ProjectType!], sortOrder: ProjectSortOption): [Project!]!
}

"""
HUD Race (1.7)
"""
enum Race {
  """
  (AmIndAKNative) American Indian, Alaska Native, or Indigenous
  """
  RACE_AM_IND_AK_NATIVE

  """
  (Asian) Asian or Asian American
  """
  RACE_ASIAN

  """
  (BlackAfAmerican) Black, African American, or African
  """
  RACE_BLACK_AF_AMERICAN

  """
  (NativeHIPacific) Native Hawaiian or Pacific Islander
  """
  RACE_NATIVE_HI_PACIFIC

  """
  (99) Data not collected
  """
  RACE_NOT_COLLECTED

  """
  (9) Client refused
  """
  RACE_REFUSED

  """
  (8) Client doesn't know
  """
  RACE_UNKNOWN

  """
  (White) White
  """
  RACE_WHITE
}

"""
HUD RecordType (1.4)
"""
enum RecordType {
  """
  (200) Bed night
  """
  BED_NIGHT

  """
  (300) C2 Moving On Assistance Provided
  """
  C2_MOVING_ON_ASSISTANCE_PROVIDED

  """
  (151) HOPWA financial assistance
  """
  HOPWA_FINANCIAL_ASSISTANCE

  """
  (143) HOPWA service
  """
  HOPWA_SERVICE

  """
  (210) HUD-VASH OTH voucher tracking
  """
  HUD_VASH_OTH_VOUCHER_TRACKING

  """
  (161) PATH referral
  """
  PATH_REFERRAL

  """
  (141) PATH service
  """
  PATH_SERVICE

  """
  (162) RHY referral
  """
  RHY_REFERRAL

  """
  (142) RHY service connections
  """
  RHY_SERVICE_CONNECTIONS

  """
  (152) SSVF financial assistance
  """
  SSVF_FINANCIAL_ASSISTANCE

  """
  (144) SSVF service
  """
  SSVF_SERVICE
}

"""
HUD ReferralCaseManageAfter (1.7)
"""
enum ReferralCaseManageAfter {
  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  (0) No
  """
  NO

  """
  (1) Yes
  """
  YES
}

"""
HUD ReferralResult (4.20.D)
"""
enum ReferralResult {
  """
  (1) Successful referral: client accepted
  """
  SUCCESSFUL_REFERRAL_CLIENT_ACCEPTED

  """
  (2) Unsuccessful referral: client rejected
  """
  UNSUCCESSFUL_REFERRAL_CLIENT_REJECTED

  """
  (3) Unsuccessful referral: provider rejected
  """
  UNSUCCESSFUL_REFERRAL_PROVIDER_REJECTED
}

"""
HUD RelationshipToHoH (3.15.1)
"""
enum RelationshipToHoH {
  """
  (2) Child
  """
  CHILD

  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  (4) Other relative
  """
  OTHER_RELATIVE

  """
  (1) Self (head of household)
  """
  SELF_HEAD_OF_HOUSEHOLD_

  """
  (3) Spouse or partner
  """
  SPOUSE_OR_PARTNER

  """
  (5) Unrelated household member
  """
  UNRELATED_HOUSEHOLD_MEMBER
}

"""
HUD SSN Data Quality (3.02.2)
"""
enum SSNDataQuality {
  """
  (2) Approximate or partial SSN reported
  """
  SSN_APPROXIMATE_OR_PARTIAL_SSN_REPORTED

  """
  (8) Client doesn't know
  """
  SSN_CLIENT_DOESN_T_KNOW

  """
  (9) Client refused
  """
  SSN_CLIENT_REFUSED

  """
  (99) Data not collected
  """
  SSN_DATA_NOT_COLLECTED

  """
  (1) Full SSN reported
  """
  SSN_FULL_SSN_REPORTED
}

"""
HUD Service
"""
type Service {
  FAAmount: Float
  client: Client!
  dateCreated: ISO8601DateTime!
  dateDeleted: ISO8601DateTime
  dateProvided: ISO8601Date!
  dateUpdated: ISO8601DateTime!
  enrollment: Enrollment!
  id: ID!
  movingOnOtherType: String
  otherTypeProvided: String
  recordType: RecordType!
  referralOutcome: PATHReferralOutcome
  subTypeProvided: ServiceSubTypeProvided
  typeProvided: ServiceTypeProvided!
  user: User!
}

"""
HUD Service Input
"""
input ServiceInput {
  FAAmount: Float

  """
  Date with format yyyy-mm-dd
  """
  dateProvided: String
  enrollmentId: ID
  movingOnOtherType: String
  otherTypeProvided: String
  recordType: RecordType
  referralOutcome: PATHReferralOutcome
  subTypeProvided: ServiceSubTypeProvided
  typeProvided: ServiceTypeProvided
}

"""
HUD Service Sorting Options
"""
enum ServiceSortOption {
  DATE_PROVIDED
}

"""
HUD Service TypeProvided:SubTypeProvided aggregate (V2.A, V2.B, V2.C)
"""
enum ServiceSubTypeProvided {
  """
  (12) Child care
  """
  SSVF_SERVICE__ASSISTANCE_OBTAINING_COORDINATING_OTHER_PUBLIC_BENEFITS__CHILD_CARE

  """
  (2) Daily living services
  """
  SSVF_SERVICE__ASSISTANCE_OBTAINING_COORDINATING_OTHER_PUBLIC_BENEFITS__DAILY_LIVING_SERVICES

  """
  (6) Fiduciary and representative payee services
  """
  SSVF_SERVICE__ASSISTANCE_OBTAINING_COORDINATING_OTHER_PUBLIC_BENEFITS__FIDUCIARY_AND_REPRESENTATIVE_PAYEE_SERVICES

  """
  (1) Health care services
  """
  SSVF_SERVICE__ASSISTANCE_OBTAINING_COORDINATING_OTHER_PUBLIC_BENEFITS__HEALTH_CARE_SERVICES

  """
  (13) Housing counseling
  """
  SSVF_SERVICE__ASSISTANCE_OBTAINING_COORDINATING_OTHER_PUBLIC_BENEFITS__HOUSING_COUNSELING

  """
  (5) Income support services
  """
  SSVF_SERVICE__ASSISTANCE_OBTAINING_COORDINATING_OTHER_PUBLIC_BENEFITS__INCOME_SUPPORT_SERVICES

  """
  (7) Legal services - child support
  """
  SSVF_SERVICE__ASSISTANCE_OBTAINING_COORDINATING_OTHER_PUBLIC_BENEFITS__LEGAL_SERVICES_CHILD_SUPPORT

  """
  (8) Legal services - eviction prevention
  """
  SSVF_SERVICE__ASSISTANCE_OBTAINING_COORDINATING_OTHER_PUBLIC_BENEFITS__LEGAL_SERVICES_EVICTION_PREVENTION

  """
  (11) Legal services - other
  """
  SSVF_SERVICE__ASSISTANCE_OBTAINING_COORDINATING_OTHER_PUBLIC_BENEFITS__LEGAL_SERVICES_OTHER

  """
  (9) Legal services - outstanding fines and penalties
  """
  SSVF_SERVICE__ASSISTANCE_OBTAINING_COORDINATING_OTHER_PUBLIC_BENEFITS__LEGAL_SERVICES_OUTSTANDING_FINES_AND_PENALTIES

  """
  (10) Legal services - restore / acquire driver's license
  """
  SSVF_SERVICE__ASSISTANCE_OBTAINING_COORDINATING_OTHER_PUBLIC_BENEFITS__LEGAL_SERVICES_RESTORE_ACQUIRE_DRIVER_S_LICENSE

  """
  (3) Personal financial planning services
  """
  SSVF_SERVICE__ASSISTANCE_OBTAINING_COORDINATING_OTHER_PUBLIC_BENEFITS__PERSONAL_FINANCIAL_PLANNING_SERVICES

  """
  (4) Transportation services
  """
  SSVF_SERVICE__ASSISTANCE_OBTAINING_COORDINATING_OTHER_PUBLIC_BENEFITS__TRANSPORTATION_SERVICES

  """
  (3) Educational assistance
  """
  SSVF_SERVICE__ASSISTANCE_OBTAINING_VA_BENEFITS__EDUCATIONAL_ASSISTANCE

  """
  (2) Employment and training services
  """
  SSVF_SERVICE__ASSISTANCE_OBTAINING_VA_BENEFITS__EMPLOYMENT_AND_TRAINING_SERVICES

  """
  (4) Health care services
  """
  SSVF_SERVICE__ASSISTANCE_OBTAINING_VA_BENEFITS__HEALTH_CARE_SERVICES

  """
  (1) VA vocational and rehabilitation counseling
  """
  SSVF_SERVICE__ASSISTANCE_OBTAINING_VA_BENEFITS__VA_VOCATIONAL_AND_REHABILITATION_COUNSELING

  """
  (10) Child care
  """
  SSVF_SERVICE__DIRECT_PROVISION_OF_OTHER_PUBLIC_BENEFITS__CHILD_CARE

  """
  (4) Fiduciary and representative payee services
  """
  SSVF_SERVICE__DIRECT_PROVISION_OF_OTHER_PUBLIC_BENEFITS__FIDUCIARY_AND_REPRESENTATIVE_PAYEE_SERVICES

  """
  (11) Housing counseling
  """
  SSVF_SERVICE__DIRECT_PROVISION_OF_OTHER_PUBLIC_BENEFITS__HOUSING_COUNSELING

  """
  (3) Income support services
  """
  SSVF_SERVICE__DIRECT_PROVISION_OF_OTHER_PUBLIC_BENEFITS__INCOME_SUPPORT_SERVICES

  """
  (5) Legal services - child support
  """
  SSVF_SERVICE__DIRECT_PROVISION_OF_OTHER_PUBLIC_BENEFITS__LEGAL_SERVICES_CHILD_SUPPORT

  """
  (6) Legal services - eviction prevention
  """
  SSVF_SERVICE__DIRECT_PROVISION_OF_OTHER_PUBLIC_BENEFITS__LEGAL_SERVICES_EVICTION_PREVENTION

  """
  (9) Legal services - other
  """
  SSVF_SERVICE__DIRECT_PROVISION_OF_OTHER_PUBLIC_BENEFITS__LEGAL_SERVICES_OTHER

  """
  (7) Legal services - outstanding fines and penalties
  """
  SSVF_SERVICE__DIRECT_PROVISION_OF_OTHER_PUBLIC_BENEFITS__LEGAL_SERVICES_OUTSTANDING_FINES_AND_PENALTIES

  """
  (8) Legal services - restore / acquire driver's license
  """
  SSVF_SERVICE__DIRECT_PROVISION_OF_OTHER_PUBLIC_BENEFITS__LEGAL_SERVICES_RESTORE_ACQUIRE_DRIVER_S_LICENSE

  """
  (1) Personal financial planning services
  """
  SSVF_SERVICE__DIRECT_PROVISION_OF_OTHER_PUBLIC_BENEFITS__PERSONAL_FINANCIAL_PLANNING_SERVICES

  """
  (2) Transportation services
  """
  SSVF_SERVICE__DIRECT_PROVISION_OF_OTHER_PUBLIC_BENEFITS__TRANSPORTATION_SERVICES
}

"""
HUD Service RecordType:TypeProvided aggregate (P1.2, R14.2, W1.2, V2.2, W2.3, V3.3, P2.2, 4.14, V8.1, C2.2)
"""
enum ServiceTypeProvided {
  """
  (200) BedNight
  """
  BED_NIGHT__BED_NIGHT

  """
  (2) Financial assistance for Moving On (e.g., security deposit, moving expenses)
  """
  C2_MOVING_ON_ASSISTANCE_PROVIDED__FINANCIAL_ASSISTANCE_FOR_MOVING_ON_E_G_SECURITY_DEPOSIT_MOVING_EXPENSES_

  """
  (4) Housing referral/placement
  """
  C2_MOVING_ON_ASSISTANCE_PROVIDED__HOUSING_REFERRAL_PLACEMENT

  """
  (3) Non-financial assistance for Moving On (e.g., housing navigation, transition support)
  """
  C2_MOVING_ON_ASSISTANCE_PROVIDED__NON_FINANCIAL_ASSISTANCE_FOR_MOVING_ON_E_G_HOUSING_NAVIGATION_TRANSITION_SUPPORT_

  """
  (5) Other (please specify)
  """
  C2_MOVING_ON_ASSISTANCE_PROVIDED__OTHER_PLEASE_SPECIFY_

  """
  (1) Subsidized housing application assistance
  """
  C2_MOVING_ON_ASSISTANCE_PROVIDED__SUBSIDIZED_HOUSING_APPLICATION_ASSISTANCE

  """
  (7) Mortgage assistance
  """
  HOPWA_FINANCIAL_ASSISTANCE__MORTGAGE_ASSISTANCE

  """
  (1) Rental assistance
  """
  HOPWA_FINANCIAL_ASSISTANCE__RENTAL_ASSISTANCE

  """
  (2) Security deposits
  """
  HOPWA_FINANCIAL_ASSISTANCE__SECURITY_DEPOSITS

  """
  (3) Utility deposits
  """
  HOPWA_FINANCIAL_ASSISTANCE__UTILITY_DEPOSITS

  """
  (4) Utility payments
  """
  HOPWA_FINANCIAL_ASSISTANCE__UTILITY_PAYMENTS

  """
  (1) Adult day care and personal assistance
  """
  HOPWA_SERVICE__ADULT_DAY_CARE_AND_PERSONAL_ASSISTANCE

  """
  (2) Case management
  """
  HOPWA_SERVICE__CASE_MANAGEMENT

  """
  (3) Child care
  """
  HOPWA_SERVICE__CHILD_CARE

  """
  (4) Criminal justice/legal services
  """
  HOPWA_SERVICE__CRIMINAL_JUSTICE_LEGAL_SERVICES

  """
  (5) Education
  """
  HOPWA_SERVICE__EDUCATION

  """
  (6) Employment and training services
  """
  HOPWA_SERVICE__EMPLOYMENT_AND_TRAINING_SERVICES

  """
  (7) Food/meals/nutritional services
  """
  HOPWA_SERVICE__FOOD_MEALS_NUTRITIONAL_SERVICES

  """
  (8) Health/medical care
  """
  HOPWA_SERVICE__HEALTH_MEDICAL_CARE

  """
  (9) Life skills training
  """
  HOPWA_SERVICE__LIFE_SKILLS_TRAINING

  """
  (10) Mental health care/counseling
  """
  HOPWA_SERVICE__MENTAL_HEALTH_CARE_COUNSELING

  """
  (14) Other HOPWA funded service
  """
  HOPWA_SERVICE__OTHER_HOPWA_FUNDED_SERVICE

  """
  (11) Outreach and/or engagement
  """
  HOPWA_SERVICE__OUTREACH_AND_OR_ENGAGEMENT

  """
  (12) Substance abuse services/treatment
  """
  HOPWA_SERVICE__SUBSTANCE_ABUSE_SERVICES_TREATMENT

  """
  (13) Transportation
  """
  HOPWA_SERVICE__TRANSPORTATION

  """
  (12) Other
  """
  HUD_VASH_OTH_VOUCHER_TRACKING__OTHER

  """
  (1) Referral package forwarded to PHA
  """
  HUD_VASH_OTH_VOUCHER_TRACKING__REFERRAL_PACKAGE_FORWARDED_TO_PHA

  """
  (10) Veteran exited - family maintained the voucher
  """
  HUD_VASH_OTH_VOUCHER_TRACKING__VETERAN_EXITED_FAMILY_MAINTAINED_THE_VOUCHER

  """
  (11) Veteran exited - prior to ever receiving a voucher
  """
  HUD_VASH_OTH_VOUCHER_TRACKING__VETERAN_EXITED_PRIOR_TO_EVER_RECEIVING_A_VOUCHER

  """
  (9) Veteran exited - voucher was returned
  """
  HUD_VASH_OTH_VOUCHER_TRACKING__VETERAN_EXITED_VOUCHER_WAS_RETURNED

  """
  (2) Voucher denied by PHA
  """
  HUD_VASH_OTH_VOUCHER_TRACKING__VOUCHER_DENIED_BY_PHA

  """
  (5) Voucher in use - veteran moved into housing
  """
  HUD_VASH_OTH_VOUCHER_TRACKING__VOUCHER_IN_USE_VETERAN_MOVED_INTO_HOUSING

  """
  (3) Voucher issued by PHA
  """
  HUD_VASH_OTH_VOUCHER_TRACKING__VOUCHER_ISSUED_BY_PHA

  """
  (4) Voucher revoked or expired
  """
  HUD_VASH_OTH_VOUCHER_TRACKING__VOUCHER_REVOKED_OR_EXPIRED

  """
  (7) Voucher was administratively absorbed by new PHA
  """
  HUD_VASH_OTH_VOUCHER_TRACKING__VOUCHER_WAS_ADMINISTRATIVELY_ABSORBED_BY_NEW_PHA

  """
  (8) Voucher was converted to Housing Choice Voucher
  """
  HUD_VASH_OTH_VOUCHER_TRACKING__VOUCHER_WAS_CONVERTED_TO_HOUSING_CHOICE_VOUCHER

  """
  (6) Voucher was ported locally
  """
  HUD_VASH_OTH_VOUCHER_TRACKING__VOUCHER_WAS_PORTED_LOCALLY

  """
  (1) Community mental health
  """
  PATH_REFERRAL__COMMUNITY_MENTAL_HEALTH

  """
  (5) Educational services
  """
  PATH_REFERRAL__EDUCATIONAL_SERVICES

  """
  (9) Employment assistance
  """
  PATH_REFERRAL__EMPLOYMENT_ASSISTANCE

  """
  (6) Housing services
  """
  PATH_REFERRAL__HOUSING_SERVICES

  """
  (8) Income assistance
  """
  PATH_REFERRAL__INCOME_ASSISTANCE

  """
  (4) Job training
  """
  PATH_REFERRAL__JOB_TRAINING

  """
  (10) Medical insurance
  """
  PATH_REFERRAL__MEDICAL_INSURANCE

  """
  (7) Permanent housing
  """
  PATH_REFERRAL__PERMANENT_HOUSING

  """
  (3) Primary health/dental care
  """
  PATH_REFERRAL__PRIMARY_HEALTH_DENTAL_CARE

  """
  (2) Substance use treatment
  """
  PATH_REFERRAL__SUBSTANCE_USE_TREATMENT

  """
  (11) Temporary housing
  """
  PATH_REFERRAL__TEMPORARY_HOUSING

  """
  (6) Case management
  """
  PATH_SERVICE__CASE_MANAGEMENT

  """
  (14) Clinical assessment
  """
  PATH_SERVICE__CLINICAL_ASSESSMENT

  """
  (4) Community mental health
  """
  PATH_SERVICE__COMMUNITY_MENTAL_HEALTH

  """
  (3) Habilitation/rehabilitation
  """
  PATH_SERVICE__HABILITATION_REHABILITATION

  """
  (10) Housing eligibility determination
  """
  PATH_SERVICE__HOUSING_ELIGIBILITY_DETERMINATION

  """
  (8) Housing minor renovation
  """
  PATH_SERVICE__HOUSING_MINOR_RENOVATION

  """
  (9) Housing moving assistance
  """
  PATH_SERVICE__HOUSING_MOVING_ASSISTANCE

  """
  (12) One-time rent for eviction prevention
  """
  PATH_SERVICE__ONE_TIME_RENT_FOR_EVICTION_PREVENTION

  """
  (7) Residential supportive services
  """
  PATH_SERVICE__RESIDENTIAL_SUPPORTIVE_SERVICES

  """
  (1) Re-engagement
  """
  PATH_SERVICE__RE_ENGAGEMENT

  """
  (2) Screening
  """
  PATH_SERVICE__SCREENING

  """
  (11) Security deposits
  """
  PATH_SERVICE__SECURITY_DEPOSITS

  """
  (5) Substance use treatment
  """
  PATH_SERVICE__SUBSTANCE_USE_TREATMENT

  """
  (2) Community service/service learning (CSL)
  """
  RHY_SERVICE_CONNECTIONS__COMMUNITY_SERVICE_SERVICE_LEARNING_CSL_

  """
  (7) Criminal justice /legal services
  """
  RHY_SERVICE_CONNECTIONS__CRIMINAL_JUSTICE_LEGAL_SERVICES

  """
  (5) Education
  """
  RHY_SERVICE_CONNECTIONS__EDUCATION

  """
  (6) Employment and training services
  """
  RHY_SERVICE_CONNECTIONS__EMPLOYMENT_AND_TRAINING_SERVICES

  """
  (14) Health/medical care
  """
  RHY_SERVICE_CONNECTIONS__HEALTH_MEDICAL_CARE

  """
  (26) Home-based Services
  """
  RHY_SERVICE_CONNECTIONS__HOME_BASED_SERVICES

  """
  (8) Life skills training
  """
  RHY_SERVICE_CONNECTIONS__LIFE_SKILLS_TRAINING

  """
  (10) Parenting education for youth with children
  """
  RHY_SERVICE_CONNECTIONS__PARENTING_EDUCATION_FOR_YOUTH_WITH_CHILDREN

  """
  (12) Post-natal care
  """
  RHY_SERVICE_CONNECTIONS__POST_NATAL_CARE

  """
  (27) Post-natal newborn care (wellness exams; immunizations)
  """
  RHY_SERVICE_CONNECTIONS__POST_NATAL_NEWBORN_CARE_WELLNESS_EXAMS_IMMUNIZATIONS_

  """
  (13) Pre-natal care
  """
  RHY_SERVICE_CONNECTIONS__PRE_NATAL_CARE

  """
  (28) STD Testing
  """
  RHY_SERVICE_CONNECTIONS__STD_TESTING

  """
  (29) Street-based Services
  """
  RHY_SERVICE_CONNECTIONS__STREET_BASED_SERVICES

  """
  (18) Substance use disorder/Prevention Services
  """
  RHY_SERVICE_CONNECTIONS__SUBSTANCE_USE_DISORDER_PREVENTION_SERVICES

  """
  (17) Substance use disorder treatment
  """
  RHY_SERVICE_CONNECTIONS__SUBSTANCE_USE_DISORDER_TREATMENT

  """
  (10) Child care
  """
  SSVF_FINANCIAL_ASSISTANCE__CHILD_CARE

  """
  (14) Emergency housing assistance
  """
  SSVF_FINANCIAL_ASSISTANCE__EMERGENCY_HOUSING_ASSISTANCE

  """
  (15) Extended Shallow Subsidy - Rental Assistance
  """
  SSVF_FINANCIAL_ASSISTANCE__EXTENDED_SHALLOW_SUBSIDY_RENTAL_ASSISTANCE

  """
  (16) Food Assistance
  """
  SSVF_FINANCIAL_ASSISTANCE__FOOD_ASSISTANCE

  """
  (12) General housing stability assistance
  """
  SSVF_FINANCIAL_ASSISTANCE__GENERAL_HOUSING_STABILITY_ASSISTANCE

  """
  (11) General housing stability assistance - emergency supplies
  """
  SSVF_FINANCIAL_ASSISTANCE__GENERAL_HOUSING_STABILITY_ASSISTANCE_EMERGENCY_SUPPLIES

  """
  (5) Moving costs
  """
  SSVF_FINANCIAL_ASSISTANCE__MOVING_COSTS

  """
  (1) Rental assistance
  """
  SSVF_FINANCIAL_ASSISTANCE__RENTAL_ASSISTANCE

  """
  (2) Security deposit
  """
  SSVF_FINANCIAL_ASSISTANCE__SECURITY_DEPOSIT

  """
  (8) Transportation services: tokens/vouchers
  """
  SSVF_FINANCIAL_ASSISTANCE__TRANSPORTATION_SERVICES_TOKENS_VOUCHERS

  """
  (9) Transportation services: vehicle repair/maintenance
  """
  SSVF_FINANCIAL_ASSISTANCE__TRANSPORTATION_SERVICES_VEHICLE_REPAIR_MAINTENANCE

  """
  (3) Utility deposit
  """
  SSVF_FINANCIAL_ASSISTANCE__UTILITY_DEPOSIT

  """
  (4) Utility fee payment assistance
  """
  SSVF_FINANCIAL_ASSISTANCE__UTILITY_FEE_PAYMENT_ASSISTANCE

  """
  (4) Assistance obtaining/coordinating other public benefits
  """
  SSVF_SERVICE__ASSISTANCE_OBTAINING_COORDINATING_OTHER_PUBLIC_BENEFITS

  """
  (3) Assistance obtaining VA benefits
  """
  SSVF_SERVICE__ASSISTANCE_OBTAINING_VA_BENEFITS

  """
  (2) Case management services
  """
  SSVF_SERVICE__CASE_MANAGEMENT_SERVICES

  """
  (5) Direct provision of other public benefits
  """
  SSVF_SERVICE__DIRECT_PROVISION_OF_OTHER_PUBLIC_BENEFITS

  """
  (6) Other (non-TFA) supportive service approved by VA
  """
  SSVF_SERVICE__OTHER_NON_TFA_SUPPORTIVE_SERVICE_APPROVED_BY_VA

  """
  (1) Outreach services
  """
  SSVF_SERVICE__OUTREACH_SERVICES
}

type ServicesPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [Service!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

"""
Autogenerated input type of SetHoHForEnrollment
"""
input SetHoHForEnrollmentInput {
  clientId: ID!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  householdId: ID!
}

"""
Autogenerated return type of SetHoHForEnrollment
"""
type SetHoHForEnrollmentPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  enrollment: Enrollment
  errors: [ValidationError!]!
}

"""
HUD TargetPopulation (2.02.8)
"""
enum TargetPopulation {
  """
  (1) Domestic violence victims
  """
  DOMESTIC_VIOLENCE_VICTIMS

  """
  (4) Not applicable
  """
  NOT_APPLICABLE

  """
  (3) Persons with HIV/AIDS
  """
  PERSONS_WITH_HIV_AIDS
}

"""
HUD TrackingMethod (2.02.C)
"""
enum TrackingMethod {
  """
  (0) Entry/Exit Date
  """
  ENTRY_EXIT_DATE

  """
  (3) Night-by-Night
  """
  NIGHT_BY_NIGHT
}

"""
Autogenerated input type of UpdateEnrollment
"""
input UpdateEnrollmentInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  Entry date with format yyyy-mm-dd
  """
  entryDate: String
  id: ID!
  relationshipToHoH: RelationshipToHoH
}

"""
Autogenerated return type of UpdateEnrollment
"""
type UpdateEnrollmentPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  enrollment: Enrollment
  errors: [ValidationError!]!
}

"""
Autogenerated input type of UpdateFunder
"""
input UpdateFunderInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
  input: FunderInput!
}

"""
Autogenerated return type of UpdateFunder
"""
type UpdateFunderPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
  funder: Funder
}

"""
Autogenerated input type of UpdateInventory
"""
input UpdateInventoryInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
  input: InventoryInput!
}

"""
Autogenerated return type of UpdateInventory
"""
type UpdateInventoryPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
  inventory: Inventory
}

"""
Autogenerated input type of UpdateOrganization
"""
input UpdateOrganizationInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
  input: OrganizationInput!
}

"""
Autogenerated return type of UpdateOrganization
"""
type UpdateOrganizationPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
  organization: Organization
}

"""
Autogenerated input type of UpdateProjectCoc
"""
input UpdateProjectCocInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
  input: ProjectCocInput!
}

"""
Autogenerated return type of UpdateProjectCoc
"""
type UpdateProjectCocPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
  projectCoc: ProjectCoc
}

"""
Autogenerated input type of UpdateProject
"""
input UpdateProjectInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
  input: ProjectInput!
}

"""
Autogenerated return type of UpdateProject
"""
type UpdateProjectPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
  project: Project
}

"""
Autogenerated input type of UpdateService
"""
input UpdateServiceInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
  input: ServiceInput!
}

"""
Autogenerated return type of UpdateService
"""
type UpdateServicePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
  service: Service
}

"""
HUD User
"""
type User {
  dateCreated: ISO8601DateTime!
  dateDeleted: ISO8601DateTime
  dateUpdated: ISO8601DateTime!
  id: ID!
  name: String!
}

type ValidationError {
  attribute: String
  fullMessage: String
  id: String
  message: String!
  options: JsonObject
  type: String!
}

"""
HUD Veteran Status (1.8)
"""
enum VeteranStatus {
  """
  (8) Client doesn't know
  """
  VETERAN_STATUS_CLIENT_DOESN_T_KNOW

  """
  (9) Client refused
  """
  VETERAN_STATUS_CLIENT_REFUSED

  """
  (99) Data not collected
  """
  VETERAN_STATUS_DATA_NOT_COLLECTED

  """
  (0) No
  """
  VETERAN_STATUS_NO

  """
  (1) Yes
  """
  VETERAN_STATUS_YES
}
