- coc_cols = if active_report_versions.count > 1 then 'col-sm-3' else 'col-sm-6' end

- default_coc_code = GrdaWarehouse::Config.get(:site_coc_codes)
= simple_form_for @filter, as: :filter, url: url do |f|
  - content_for :filters_col_full do
    .hud-report-options
      %h2 Required Options
      .row
        .col-sm-3
          = f.input :start, as: :date_picker, label: 'Start Date', required: true
        .col-sm-3
          = f.input :end, as: :date_picker, label: 'End Date', required: true

        - if active_report_versions.count > 1
          .col-sm-3
            = f.input :report_version, collection: active_report_versions, as: :select_two, include_blank: false, label: 'Report Version'
        - else
          = f.input :report_version, as: :hidden, input_html: { value: active_report_versions.map(&:last)}
        %div{ class: coc_cols }
          = f.input :coc_codes, collection: @filter.coc_code_options_for_select(user: current_user), as: :select_two, input_html: {multiple: true}, label: 'CoC Codes', hint: default_coc_code
      %h2 Projects to Include
      .row
        .col-6
          = f.input :project_ids, collection: @filter.project_options_for_select(user: current_user), as: :grouped_select_two, group_method: :last, input_html: { multiple: true, placeholder: 'Choose Projects' },label: 'Projects'
        .col-6
          = f.input :data_source_ids, collection: @filter.data_source_options_for_select(user: current_user), as: :select_two, input_html: {multiple: true, placeholder: 'Choose Data Sources'}, label: 'Data Sources'
      .row
        .col-6
          = f.input :project_type_codes, collection: @filter.path_project_types_for_select, input_html: { multiple: true, placeholder: 'Choose Project Types' }, label: 'Project Types', as: :select_two
        .col-6
          = f.input :project_group_ids, collection: @filter.project_groups_options_for_select(user: current_user), as: :select_two, input_html: {multiple: true, placeholder: 'Choose Project Groups'}, label: 'Project Groups'

  - content_for :filter_actions do
    = f.button :submit, value: 'Queue Report'

  = render 'warehouse_reports/filters', f: f
