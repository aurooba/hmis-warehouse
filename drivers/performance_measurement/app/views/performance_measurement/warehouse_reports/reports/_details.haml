- markdown = Redcarpet::Markdown.new(::InlineHtml)
- category = @report.detail_category_for(key)
- title = "#{category} | #{@report.detail_title_for(key)}"
- system_class_name = "jSystemLevelChart_#{key}"
- result = @report.result_for(key)
= content_for :crumbs do
  = link_to performance_measurement_warehouse_reports_report_path(@report) do
    &laquo; #{_('CoC Performance Measurement Dashboard')}
.performance-measurement
  .p-4{ class: "performance-measurement--highlight-#{@report.highlight_id(category)}" }
    %h1= title
    %p= @report.filter.date_range_words
  .d-flex.m-4
    .goal
      %h3 Goal
      %p= raw markdown.render(@report.detail_goal_description_for(key))
    .calculation.ml-6
      %h3 Calculation
      %p= @report.detail_calculation_description_for(key)
    - if can_view_hud_reports? && @report.clients.any?
      .col-1.ml-6.p-0
        %h3.mb-4 SPMs
        - report_start = Date.parse(@report.options[:start.to_s])
        .mb-2
          = link_to hud_reports_spm_path(@report.comparison_spm_id), class: 'btn btn-sm btn-secondary' do
            = (report_start - 1.year).year
        .mb-2
          = link_to hud_reports_spm_path(@report.reporting_spm_id), class: 'btn btn-sm btn-secondary' do
            = report_start.year

  .p-4.mb-4{ class: "performance-measurement--highlight-light-#{@report.highlight_id(category)}" }
    %h2 System Level
  .d-flex
    .w-50
      = render 'warehouse_reports/indicator', indicator: @report.detail_indicator_result(result, key)
    .w-50
      .c-chart--vertical-bar{ class: system_class_name, data: { chart: result.data_for_system_level_bar.to_json }}
      - label = @report.detail_denominator_label_for(key)
      - if label.present?
        .d-flex.text-center.ml-4
          .w-50
            %strong= result.comparison_numerator
            of
            = label
            %strong= result.comparison_denominator
          .w-50
            %strong= result.reporting_numerator
            of
            = label
            %strong= result.reporting_denominator
  - if @report.detail_column_for(key) != :system
    = render 'performance_measurement/warehouse_reports/reports/projects', key: key, category: category


= content_for :page_js do
  :javascript
    $(document).ready(function(){
      const data = $('.#{system_class_name}').data('chart');
      const max = Math.max(...data.columns[1].slice(1));
      const include_percent = #{result.primary_unit.starts_with?('%')}
      const goal = #{@report.detail_goal_for(key)};
      data.labels.format = function (v, id, i, texts) {
        if (v < max * 0.15) {
          return '';
        }
        if (include_percent) {
          return d3.format(".0%")(v / 100);
        } else {
          return d3.format(",d")(v);
        }
      }

      const chart = bb.generate({
        data: data,
        axis: {
          rotated: include_percent,
          x: { type: 'category' },
          y: {
            tick: {
              stepSize: 1,
              count: 3,
              format: function(x) { return `${d3.format('d')(x)}${include_percent ? '%' : ''}`}
            },
            max: max < goal ? goal : undefined,
          },
        },
        grid: { y: { lines: [{ value: goal }] } },
        size: { height: 150 },
        legend: { show: false },
        // bar: { label: { threshold: 1 } },
        bindto: '.#{system_class_name}'
      });

      d3.select('.#{system_class_name} .bb-ygrid-line line').style('stroke-width', 2)
      d3.select('.#{system_class_name} .bb-ygrid-line line').style('stroke-dasharray', 2)
    });
