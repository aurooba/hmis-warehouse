- markdown = Redcarpet::Markdown.new(::InlineHtml)
- indicator = @report.result_for(key)
- if indicator
  - column = row[:column]
  .row.m-0.mb-4
    .col-sm-2
      - if column == :both
        - words = 'System and Project Level'
        %span.icon-lg.mr-2{ data: { toggle: :tooltip, title: words }}
          %i.icon-city
          %i.ml-2.icon-house
          - if pdf
            %br
            = words
      - elsif column == :project
        - words = 'Project Level'
        %span.icon-lg.mr-2{ data: { toggle: :tooltip, title: words }}
          %i.icon-house
          - if pdf
            %br
            = words
      - elsif column == :system
        - words = 'System Level'
        %span.icon-lg.mr-2{ data: { toggle: :tooltip, title: words }}
          %i.icon-city
          - if pdf
            %br
            = words
    .col-sm-6
      %h3
        = @report.detail_title_for(key)
        - if row[:measure].present?
          - text = row[:measure]
          - text += " #{row[:table]}" if row[:table].present?
          %br
          .badge.badge-secondary= "SPM #{text}"
      %p= raw markdown.render(@report.detail_goal_description_for(indicator.field.to_sym))
    .col-sm-4
      .d-flex
        .mb-4.ml-auto
          - status = indicator[:passed] ? 'success' : 'danger'
          - icon = indicator[:passed] ? 'check' : 'cross'
          - label = indicator[:passed] ? 'Passed' : 'Failed'
          = tagged(indicator[:passed], status, icon: icon, label: label)

          - include_median = key.to_s.ends_with?('_average')
          - link_text = if @report.detail_year_over_year_change?(key)
            - "#{number_with_delimiter(indicator[:secondary_value])}% change over year"
          - else
            - text = [ number_with_delimiter(indicator[:primary_value]), indicator[:primary_unit] ]
            - joiner = if indicator[:primary_unit].starts_with?('%') then '' else ' ' end
            - text = text.join(joiner)
            - if include_median
              - text = "Average: #{text}"
            - text
      .d-flex
        .font-size-md.ml-auto
          = link_to(link_text, performance_measurement_warehouse_reports_report_details_path(@report, key: key), target: :_blank)
          - if include_median
            - secondary_key = key.to_s.gsub(/_average$/, '_median')
            - secondary_indicator = @report.result_for(secondary_key)
            - text = [ number_with_delimiter(secondary_indicator[:primary_value]), secondary_indicator[:primary_unit] ]
            - joiner = if secondary_indicator[:primary_unit].starts_with?('%') then '' else ' ' end
            - text = text.join(joiner)
            - link_text = "Median: #{text}"
            .mt-2= link_to(link_text, performance_measurement_warehouse_reports_report_details_path(@report, key: secondary_key), target: :_blank)
- else
  %tr
    %td
      Error displaying:
      = key
