= render 'breadcrumbs'
-# = render 'beta_warning'

- title = _("CoC Performance Measurement Dashboard")
- content_for :title, title
.d-flex
  %h1= content_for :title
  .ml-auto
    = render 'report_downloads/report_download', export: @pdf_export, excel_download_path: nil
%p= "Created by #{@report.user.name_with_email} on #{@report.completed_at.to_date}"
.well.report-listing.warehouse-reports__completed
  = @report.filter.describe_filter_as_html

.well.p-0
  %table.table.table-striped.mb-0
    %thead
      %th Category
      %th Sub Category
      %th Level
      %th Metric
      %th Passed
      %th Count
      %th Unit
      %th Change over Year
      %th Direction
    %tbody
      - @report.summary_table.each.with_index do |(title, group), i|
        - rowspan = group.keys.count + group.values.map(&:values).flatten.count + 1
        %tr.c-table__row{ class: "c-table__row--highlight-#{i + 1}" }
          %th.level{rowspan: rowspan}= title
        - group.each do |sub_category, sub_group|
          %tr.c-table__row{ class: "c-table__row--highlight-#{i + 1}" }
            - rowspan = sub_group.count + 1
            %th.level{rowspan: rowspan}= sub_category
          - sub_group.each do |row|
            - key = row.first
            - indicator = @report.result_for(key)
            - if indicator
              - column = row.last[:column]
              - options = { indicator: indicator, title: @report.detail_goal_description_for(indicator.field.to_sym), description: @report.detail_calculation_description_for(indicator.field.to_sym), toggle: :popover, boundary: :window, trigger: :focus, placement: :bottom }
              %tr
                %td
                  - if column == :both
                    System and Project Level
                  - else
                    = column.to_s.titleize
                %td
                  = options[:title]
                  - if options[:title].present?
                    %i.icon-info{ data: options }
                %td.c-indicator__passed{ class: indicator[:passed] ? "pass" : "fail" }
                  = checkmark_or_x(indicator[:passed], size: :sm, symbol_names: { true => 'ok-circled', false => 'cancel-circled2' }, wrapper_classes: {true => 'pass', false => 'fail'}, style: :svg)
                %td= link_to(number_with_delimiter(indicator[:primary_value]), performance_measurement_warehouse_reports_report_details_path(@report, key: key), target: :_blank)
                %td= indicator[:primary_unit]
                %td= number_with_delimiter(indicator[:secondary_value])
                %td.c-indicator__change-icon= change_direction_icon(indicator[:direction])
            - else
              %tr
                %td
                  Error displaying:
                  = key

%table.table.c-table--indicator
  %thead
    %th.blank{style: "width: 15%"}
    %th{style: "width: #{85.0/2}%"} System-Level
    %th{style: "width: #{85.0/2}%"} Project-Level
  %tbody
    - @report.summary_table.each.with_index do |(title, group), i|
      - rowspan = group.keys.count + group.values.map(&:values).flatten.count + 1
      %tr.c-table__row{ class: "c-table__row--highlight-#{i + 1}" }
        %th.level.w-20{rowspan: rowspan}
          %h2
            = title
      - group.each do |sub_category, sub_group|
        %tr.c-table__row{ class: "c-table__row--highlight-#{i + 1}" }
          %th.level{colspan: 2}
            %h3.text-center= sub_category
        - sub_group.each do |row|
          - key = row.first
          - indicator = @report.result_for(key)
          - if indicator
            - column = row.last[:column]
            - options = { indicator: indicator, link: performance_measurement_warehouse_reports_report_details_path(@report, key: key), title: @report.detail_goal_description_for(indicator.field.to_sym), description: @report.detail_calculation_description_for(indicator.field.to_sym) }
            %tr.indicators
              - if column == :both
                %td.both{colspan: 2}= render 'warehouse_reports/indicator', **options
              - elsif column == :system
                %td.system= render 'warehouse_reports/indicator', **options
                %td
              - elsif column == :project
                %td
                %td.project= render 'warehouse_reports/indicator', **options
          - else
            %tr.indicators
              %td.both{colspan: 2}
                Error displaying:
                = key
