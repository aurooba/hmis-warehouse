.m-4
  .data-list-wrapper
    %input.jQuarters#jQuarters{ type: :range, min: 0, max: data.count - 1, value: 0, step: 1, data: { dates: data, selected: data.first }, list: :quarters}
    .data-list-markers.d-flex
      - data.each_with_index do |date, index|
        - marker_class = if index.zero? then 'first' elsif index == data.count - 1 then 'last' else '' end
        .data-list-marker-wrapper
          .data-list-marker
            .data-list-marker-mark-wrapper
              .data-list-marker-mark{class: marker_class}
            .text-center.w-100
            Q#{quarter(Date.parse(date))} #{Date.parse(date).year}
:javascript
  function quarter_of_the_year(date) {
    var month = (date.getMonth() + 2) % 12;
    return (Math.ceil(month / 3));
  }
  $('.jQuarters').on('change', function(e) {
    var index = $(this).val();
    var selected_date = $(this).data('dates')[index];

    var date_object = new Date(Date.parse(selected_date) + 7*3600*1000); // JS has a hard time with the timezones, we just need to be roughly in the US
    var selected_quarter = quarter_of_the_year(date_object);
    $(this).data('selected', $(this).data('dates')[index]);
    var charts = $('body').data('publicCharts');
    if(charts == undefined) {
      return;
    }
    // update date display
    var quarter_string = `Q${selected_quarter} ${date_object.getFullYear()}`;
    $('.jQuarterChosenDate').text(quarter_string);
    // update all charts
    $.each(charts, function(i){
      var chart = charts[i].chart;
      var dates = charts[i].dates;
      chart.load({ columns: dates[selected_date]['data']});
      // only valid for donut charts
      chart.$.main.select(".bb-chart-arcs-title").text(dates[selected_date]['total']);
    });
    // update any dependent text
    $('.jSliderDependentText').each(function(i){
      $(this).text($(this).data('numbers')[selected_date].data);
    });
  });
  $('.jQuarters').trigger('change');
