= simple_form_for @filter, as: :filters, url: @report.show_path, method: :get do |f|
  .row
    .col
      = render 'filters/filter_controls/races/input', f: f, control: OpenStruct.new(label: 'Race')
    .col
      = render 'filters/filter_controls/ethnicities/input', f: f, control: OpenStruct.new(label: 'Ethnicity')
    .col
      = render 'filters/filter_controls/veteran_statuses/input', f: f, control: OpenStruct.new(label: 'Veteran Status')
    .col
      = render 'filters/filter_controls/household_type/input', f: f, control: OpenStruct.new(label: 'Household Type')
    .col
      = f.input :involves_ce, as: :boolean, label: 'CE Involved', required: false, hint: 'Limits universe to clients who were enrolled in CE'

  = f.submit 'Update View'
- pathways_chart = SystemPathways::PathwaysChart.new(report: @report, filter: @filter)
#sankey
- content_for :page_js do
  :javascript
    let data = #{pathways_chart.chart_data.to_json.html_safe};
    const targetColors = #{pathways_chart.target_colors.to_json.html_safe};
    const nodeWeights = #{pathways_chart.node_weights.to_json.html_safe};

    let options = {
      nodeGroup: d => d.id.split(/\W/)[0], // take first word for color
      // nodeAlign, // e.g., d3.sankeyJustify; set by input above
      // linkColor, // e.g., "source" or "target"; set by input above
      targetColors: targetColors,
      nodeWeights: nodeWeights,
      width: 1200,
      height: 400,
    }
    let sankeyChart = new App.D3Chart.Sankey('#sankey', options);
    sankeyChart.prepare();
    sankeyChart.draw(data);
